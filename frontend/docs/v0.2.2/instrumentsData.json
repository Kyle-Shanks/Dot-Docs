[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A 4-osc frequency modulation synthesizer.\nBuilt using 4 Osc nodes acting as modulators that are linked together using different algorithms.\nThe output is passed into a Limiter and then connected to a GainEnvelope node."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "const fmSynth = new Dot.FMSynth(AC, { algorithm: 5 })\n\nfmSynth.getAlgorithm() // [A > B > C] + D => Out",
        "lineNumber": 5
      },
      {
        "title": "extends",
        "description": null,
        "lineNumber": 10,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "The index of the algorithm (default: 0)",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.algorithm"
      },
      {
        "title": "param",
        "description": "The frequency of the modulator A (default: 440)",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modAFrequency"
      },
      {
        "title": "param",
        "description": "The detune of the modulator A (default: 0)",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modADetune"
      },
      {
        "title": "param",
        "description": "The gain of the modulator A (default: 440)",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modAGain"
      },
      {
        "title": "param",
        "description": "The frequency of the modulator B (default: 440)",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modBFrequency"
      },
      {
        "title": "param",
        "description": "The detune of the modulator B (default: 0)",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modBDetune"
      },
      {
        "title": "param",
        "description": "The gain of the modulator B (default: 440)",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modBGain"
      },
      {
        "title": "param",
        "description": "The frequency of the modulator C (default: 440)",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modCFrequency"
      },
      {
        "title": "param",
        "description": "The detune of the modulator C (default: 0)",
        "lineNumber": 21,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modCDetune"
      },
      {
        "title": "param",
        "description": "The gain of the modulator C (default: 440)",
        "lineNumber": 22,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modCGain"
      },
      {
        "title": "param",
        "description": "The frequency of the modulator D (default: 440)",
        "lineNumber": 23,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modDFrequency"
      },
      {
        "title": "param",
        "description": "The detune of the modulator D (default: 0)",
        "lineNumber": 24,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modDDetune"
      },
      {
        "title": "param",
        "description": "The gain of the modulator D (default: 440)",
        "lineNumber": 25,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modDGain"
      },
      {
        "title": "param",
        "description": "The attack time of the gain envelope (default: 0)",
        "lineNumber": 26,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainAttack"
      },
      {
        "title": "param",
        "description": "The decay time of the gain envelope (default: 0)",
        "lineNumber": 27,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainDecay"
      },
      {
        "title": "param",
        "description": "The sustain value of the gain envelope (default: 1)",
        "lineNumber": 28,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainSustain"
      },
      {
        "title": "param",
        "description": "The release time of the gain envelope (default: 0)",
        "lineNumber": 29,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainRelease"
      },
      {
        "title": "param",
        "description": "The gain modifier of the gain envelope (default: 0.75)",
        "lineNumber": 30,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainAmount"
      },
      {
        "title": "params",
        "description": "modAFrequency - The frequency of modulator A\nmodADetune - The detune value of modulator A\nmodAGain - The gain value of modulator A\nmodBFrequency - The frequency of modulator B\nmodBDetune - The detune value of modulator B\nmodBGain - The gain value of modulator B\nmodCFrequency - The frequency of modulator C\nmodCDetune - The detune value of modulator C\nmodCGain - The gain value of modulator C\nmodDFrequency - The frequency of modulator D\nmodDDetune - The detune value of modulator D\nmodDGain - The gain value of modulator D",
        "lineNumber": 31
      },
      {
        "title": "returns",
        "description": "FMSynth Node",
        "lineNumber": 44,
        "type": {
          "type": "NameExpression",
          "name": "FMSynth"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 33,
        "column": 0
      },
      "end": {
        "line": 78,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 79,
          "column": 0
        },
        "end": {
          "line": 418,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 10,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [
      {
        "description": "const fmSynth = new Dot.FMSynth(AC, { algorithm: 5 })\n\nfmSynth.getAlgorithm() // [A > B > C] + D => Out"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.algorithm",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The index of the algorithm (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modAFrequency",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The frequency of the modulator A (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modADetune",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The detune of the modulator A (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modAGain",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain of the modulator A (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modBFrequency",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The frequency of the modulator B (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modBDetune",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The detune of the modulator B (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modBGain",
            "lineNumber": 19,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain of the modulator B (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modCFrequency",
            "lineNumber": 20,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The frequency of the modulator C (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modCDetune",
            "lineNumber": 21,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The detune of the modulator C (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modCGain",
            "lineNumber": 22,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain of the modulator C (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modDFrequency",
            "lineNumber": 23,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The frequency of the modulator D (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modDDetune",
            "lineNumber": 24,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The detune of the modulator D (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modDGain",
            "lineNumber": 25,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain of the modulator D (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainAttack",
            "lineNumber": 26,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The attack time of the gain envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainDecay",
            "lineNumber": 27,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The decay time of the gain envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainSustain",
            "lineNumber": 28,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The sustain value of the gain envelope (default: 1)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainRelease",
            "lineNumber": 29,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The release time of the gain envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainAmount",
            "lineNumber": 30,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain modifier of the gain envelope (default: 0.75)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "FMSynth Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "FMSynth"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "FMSynth",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get an diagram for the current algorithm."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Algorithm info string",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 142,
                "column": 4
              },
              "end": {
                "line": 142,
                "column": 39
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Algorithm info string"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getAlgorithm",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getAlgorithm",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getAlgorithm"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the frequency of modulator A."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Frequency value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 145,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 149,
                "column": 4
              },
              "end": {
                "line": 149,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModAFrequency",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getModAFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getModAFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the detune of modulator A."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Detune value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 151,
              "column": 4
            },
            "end": {
              "line": 154,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 155,
                "column": 4
              },
              "end": {
                "line": 155,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModADetune",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getModADetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getModADetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the gain of modulator A."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Gain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 157,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 161,
                "column": 4
              },
              "end": {
                "line": 161,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModAGain",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getModAGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getModAGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the frequency of modulator B."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Frequency value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 168,
                "column": 4
              },
              "end": {
                "line": 168,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModBFrequency",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getModBFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getModBFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the detune of modulator B."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Detune value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 174,
                "column": 4
              },
              "end": {
                "line": 174,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModBDetune",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getModBDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getModBDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the gain of modulator B."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Gain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 176,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 180,
                "column": 4
              },
              "end": {
                "line": 180,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModBGain",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getModBGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getModBGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the frequency of modulator C."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Frequency value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 187,
                "column": 4
              },
              "end": {
                "line": 187,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModCFrequency",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getModCFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getModCFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the detune of modulator C."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Detune value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 189,
              "column": 4
            },
            "end": {
              "line": 192,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 193,
                "column": 4
              },
              "end": {
                "line": 193,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModCDetune",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getModCDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getModCDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the gain of modulator C."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Gain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 199,
                "column": 4
              },
              "end": {
                "line": 199,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModCGain",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getModCGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getModCGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the frequency of modulator D."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Frequency value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 206,
                "column": 4
              },
              "end": {
                "line": 206,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModDFrequency",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getModDFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getModDFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the detune of modulator D."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Detune value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 208,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 212,
                "column": 4
              },
              "end": {
                "line": 212,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModDDetune",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getModDDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getModDDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the gain of modulator D."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Gain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 214,
              "column": 4
            },
            "end": {
              "line": 217,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 218,
                "column": 4
              },
              "end": {
                "line": 218,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModDGain",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getModDGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getModDGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the attack time of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Attack time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 221,
              "column": 4
            },
            "end": {
              "line": 224,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 225,
                "column": 4
              },
              "end": {
                "line": 225,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Attack time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainAttack",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getGainAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getGainAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the decay time of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Decay time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 227,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 231,
                "column": 4
              },
              "end": {
                "line": 231,
                "column": 48
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Decay time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainDecay",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getGainDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getGainDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the sustain value of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Sustain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 233,
              "column": 4
            },
            "end": {
              "line": 236,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 237,
                "column": 4
              },
              "end": {
                "line": 237,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Sustain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainSustain",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getGainSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getGainSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the release time of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Release time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 243,
                "column": 4
              },
              "end": {
                "line": 243,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Release time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainRelease",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getGainRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getGainRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the gain modifier of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Modifier amount",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 245,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 249,
                "column": 4
              },
              "end": {
                "line": 249,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modifier amount"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainAmount",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "getGainAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#getGainAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the algorithm and reconnect the modulators."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Algorithm index",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "idx"
            },
            {
              "title": "returns",
              "description": "Algorithm diagram string",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 253,
              "column": 4
            },
            "end": {
              "line": 257,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 258,
                "column": 4
              },
              "end": {
                "line": 262,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "idx",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Algorithm index"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Algorithm diagram string"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setAlgorithm",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setAlgorithm",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setAlgorithm"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the frequency of modulator A.\nCalls the setFrequency method on modulator (Osc)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 270,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 271,
                "column": 4
              },
              "end": {
                "line": 271,
                "column": 71
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModAFrequency",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setModAFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setModAFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the detune of modulator A.\nCalls the setDetune method on modulator (Osc)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Detune value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 273,
              "column": 4
            },
            "end": {
              "line": 278,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 279,
                "column": 4
              },
              "end": {
                "line": 279,
                "column": 65
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModADetune",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setModADetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setModADetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain of modulator A.\nCalls the setGain method on modulator (Osc)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Gain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 281,
              "column": 4
            },
            "end": {
              "line": 286,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 287,
                "column": 4
              },
              "end": {
                "line": 287,
                "column": 61
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModAGain",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setModAGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setModAGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the frequency of modulator B.\nCalls the setFrequency method on modulator (Osc)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 295,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 296,
                "column": 4
              },
              "end": {
                "line": 296,
                "column": 71
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModBFrequency",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setModBFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setModBFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the detune of modulator B.\nCalls the setDetune method on modulator (Osc)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Detune value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 298,
              "column": 4
            },
            "end": {
              "line": 303,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 304,
                "column": 4
              },
              "end": {
                "line": 304,
                "column": 65
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModBDetune",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setModBDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setModBDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain of modulator B.\nCalls the setGain method on modulator (Osc)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Gain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 306,
              "column": 4
            },
            "end": {
              "line": 311,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 312,
                "column": 4
              },
              "end": {
                "line": 312,
                "column": 61
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModBGain",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setModBGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setModBGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the frequency of modulator C.\nCalls the setFrequency method on modulator (Osc)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 315,
              "column": 4
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 321,
                "column": 4
              },
              "end": {
                "line": 321,
                "column": 71
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModCFrequency",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setModCFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setModCFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the detune of modulator C.\nCalls the setDetune method on modulator (Osc)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Detune value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 323,
              "column": 4
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 329,
                "column": 4
              },
              "end": {
                "line": 329,
                "column": 65
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModCDetune",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setModCDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setModCDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain of modulator C.\nCalls the setGain method on modulator (Osc)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Gain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 331,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 337,
                "column": 4
              },
              "end": {
                "line": 337,
                "column": 61
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModCGain",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setModCGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setModCGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the frequency of modulator D.\nCalls the setFrequency method on modulator (Osc)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 340,
              "column": 4
            },
            "end": {
              "line": 345,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 346,
                "column": 4
              },
              "end": {
                "line": 346,
                "column": 71
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModDFrequency",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setModDFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setModDFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the detune of modulator D.\nCalls the setDetune method on modulator (Osc)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Detune value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 348,
              "column": 4
            },
            "end": {
              "line": 353,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 354,
                "column": 4
              },
              "end": {
                "line": 354,
                "column": 65
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModDDetune",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setModDDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setModDDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain of modulator D.\nCalls the setGain method on modulator (Osc)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Gain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 356,
              "column": 4
            },
            "end": {
              "line": 361,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 362,
                "column": 4
              },
              "end": {
                "line": 362,
                "column": 61
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModDGain",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setModDGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setModDGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the attack time of the gain envelope.\nCalls the setAttack method on the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Attack time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 365,
              "column": 4
            },
            "end": {
              "line": 369,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 370,
                "column": 4
              },
              "end": {
                "line": 370,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Attack time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainAttack",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setGainAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setGainAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the decay time of the gain envelope.\nCalls the setDecay method on the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Decay time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 372,
              "column": 4
            },
            "end": {
              "line": 376,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 377,
                "column": 4
              },
              "end": {
                "line": 377,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Decay time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainDecay",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setGainDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setGainDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the sustain value of the gain envelope.\nCalls the setSustain method on the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Sustain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 379,
              "column": 4
            },
            "end": {
              "line": 383,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 384,
                "column": 4
              },
              "end": {
                "line": 384,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Sustain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainSustain",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setGainSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setGainSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the release time of the gain envelope.\nCalls the setRelease method on the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Release time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 386,
              "column": 4
            },
            "end": {
              "line": 390,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 391,
                "column": 4
              },
              "end": {
                "line": 391,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Release time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainRelease",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setGainRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setGainRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain modifier of the gain envelope.\nCalls the setModifier method on the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Modifier amount",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 393,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 398,
                "column": 4
              },
              "end": {
                "line": 398,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modifier amount"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainAmount",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "setGainAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#setGainAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Trigger the attack of the gain envelope.\nCalls the triggerAttack method on the GainEnvelope."
                  }
                ]
              }
            ]
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 401,
              "column": 4
            },
            "end": {
              "line": 404,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 405,
                "column": 4
              },
              "end": {
                "line": 405,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "triggerAttack",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "triggerAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#triggerAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Trigger the release of the gain envelope.\nCalls the triggerRelease method on the GainEnvelope."
                  }
                ]
              }
            ]
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 407,
              "column": 4
            },
            "end": {
              "line": 410,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 411,
                "column": 4
              },
              "end": {
                "line": 411,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "triggerRelease",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "triggerRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#triggerRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Trigger a stop on the gain envelope.\nCalls the triggerStop method on the GainEnvelope."
                  }
                ]
              }
            ]
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 413,
              "column": 4
            },
            "end": {
              "line": 416,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 417,
                "column": 4
              },
              "end": {
                "line": 417,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/FMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "triggerStop",
          "kind": "member",
          "memberof": "FMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FMSynth",
              "kind": "class"
            },
            {
              "name": "triggerStop",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FMSynth#triggerStop"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "FMSynth",
        "kind": "class"
      }
    ],
    "namespace": "FMSynth"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "General-purpose monophonic synth node.\nConsists of an Oscillator connected to a GainEnvelope and FilterEnvelope."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "const monoSynth = new Dot.MonoSynth(AC)",
        "lineNumber": 4
      },
      {
        "title": "extends",
        "description": null,
        "lineNumber": 7,
        "type": null,
        "name": "Synth"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "Frequency of the filter envelope's filter (default: 2000)",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterFrequency"
      },
      {
        "title": "param",
        "description": "Q value of the filter envelope's filter (default: 0)",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterQ"
      },
      {
        "title": "param",
        "description": "Detune value of the filter envelope's filter (default: 0)",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterDetune"
      },
      {
        "title": "param",
        "description": "Gain of the filter envelope's filter (default: 0)",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterGain"
      },
      {
        "title": "param",
        "description": "Type of the filter envelope's filter (default: 'lowpass')",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterType"
      },
      {
        "title": "param",
        "description": "Attack time of the filter envelope (default: 0)",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterAttack"
      },
      {
        "title": "param",
        "description": "Decay time of the filter envelope (default: 0)",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterDecay"
      },
      {
        "title": "param",
        "description": "Sustain value of the filter envelope (default: 1)",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterSustain"
      },
      {
        "title": "param",
        "description": "Release time of the filter envelope (default: 0)",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterRelease"
      },
      {
        "title": "param",
        "description": "Modifier value of the filter envelope (default: 6000)",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterAmount"
      },
      {
        "title": "params",
        "description": "filterFrequency - Frequency of the filter envelope's filter\nfilterQ - Q value of the filter envelope's filter\nfilterDetune - Detune value of the filter envelope's filter\nfilterGain - Gain value of the filter envelope's filter",
        "lineNumber": 20
      },
      {
        "title": "returns",
        "description": "MonoSynth Node",
        "lineNumber": 25,
        "type": {
          "type": "NameExpression",
          "name": "MonoSynth"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 17,
        "column": 0
      },
      "end": {
        "line": 43,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 44,
          "column": 0
        },
        "end": {
          "line": 263,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 7,
        "type": null,
        "name": "Synth"
      }
    ],
    "examples": [
      {
        "description": "const monoSynth = new Dot.MonoSynth(AC)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.filterFrequency",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Frequency of the filter envelope's filter (default: 2000)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterQ",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Q value of the filter envelope's filter (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterDetune",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Detune value of the filter envelope's filter (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterGain",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Gain of the filter envelope's filter (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterType",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Type of the filter envelope's filter (default: 'lowpass')"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterAttack",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Attack time of the filter envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterDecay",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Decay time of the filter envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterSustain",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Sustain value of the filter envelope (default: 1)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterRelease",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Release time of the filter envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterAmount",
            "lineNumber": 19,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Modifier value of the filter envelope (default: 6000)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "MonoSynth Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "MonoSynth"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "MonoSynth",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the frequency of the filter envelope's filter.\nCalls getFrequency on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Filter envelope frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 87,
                "column": 4
              },
              "end": {
                "line": 87,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter envelope frequency"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterFrequency",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "getFilterFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#getFilterFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the detune value of the filter envelope's filter.\nCalls getDetune on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Filter envelope detune",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 94,
                "column": 4
              },
              "end": {
                "line": 94,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter envelope detune"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterDetune",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "getFilterDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#getFilterDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the Q value of the filter envelope's filter.\nCalls getQ on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Filter envelope q value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 101,
                "column": 4
              },
              "end": {
                "line": 101,
                "column": 44
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter envelope q value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterQ",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "getFilterQ",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#getFilterQ"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the gain of the filter envelope's filter.\nCalls getGain on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Filter envelope gain",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 108,
                "column": 4
              },
              "end": {
                "line": 108,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter envelope gain"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterGain",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "getFilterGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#getFilterGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the filter type of the filter envelope's filter.\nCalls getType on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Filter envelope type",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 110,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 115,
                "column": 4
              },
              "end": {
                "line": 115,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter envelope type"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterType",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "getFilterType",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#getFilterType"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the attack time of the filter envelope.\nCalls getAttack on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Filter envelope attack time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 118,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 123,
                "column": 4
              },
              "end": {
                "line": 123,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter envelope attack time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterAttack",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "getFilterAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#getFilterAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the decay time of the filter envelope.\nCalls getDecay on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Filter envelope decay time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 125,
              "column": 4
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 130,
                "column": 4
              },
              "end": {
                "line": 130,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter envelope decay time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterDecay",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "getFilterDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#getFilterDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the sustain value of the filter envelope.\nCalls getSustain on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Filter envelope sustain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 132,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 137,
                "column": 4
              },
              "end": {
                "line": 137,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter envelope sustain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterSustain",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "getFilterSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#getFilterSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the release time of the filter envelope.\nCalls getRelease on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Filter envelope release time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 139,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 144,
                "column": 4
              },
              "end": {
                "line": 144,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter envelope release time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterRelease",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "getFilterRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#getFilterRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the modifier amount of the filter envelope.\nCalls getModifier on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Filter envelope amount",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 151,
                "column": 4
              },
              "end": {
                "line": 151,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter envelope amount"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterAmount",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "getFilterAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#getFilterAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the frequency of the filter envelope's filter.\nCalls the setFrequency method on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 161,
                "column": 4
              },
              "end": {
                "line": 161,
                "column": 78
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterFrequency",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "setFilterFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#setFilterFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the detune value of the filter envelope's filter.\nCalls the setDetune method on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Detune",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 163,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 169,
                "column": 4
              },
              "end": {
                "line": 169,
                "column": 72
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterDetune",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "setFilterDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#setFilterDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the q value of the filter envelope's filter.\nCalls the setQ method on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Q",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 177,
                "column": 4
              },
              "end": {
                "line": 177,
                "column": 62
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Q"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterQ",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "setFilterQ",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#setFilterQ"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain of the filter envelope's filter.\nCalls the setGain method on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Gain",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 4
              },
              "end": {
                "line": 185,
                "column": 68
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterGain",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "setFilterGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#setFilterGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the type of the filter envelope's filter.\nCalls the setType method on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Filter type",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "String"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 192,
                "column": 4
              },
              "end": {
                "line": 192,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter type"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterType",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "setFilterType",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#setFilterType"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the attack time of the filter envelope.\nCalls the setAttack method on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Attack time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 200,
                "column": 4
              },
              "end": {
                "line": 200,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Attack time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterAttack",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "setFilterAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#setFilterAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the decay time of the filter envelope.\nCalls the setDecay method on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Decay time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 207,
                "column": 4
              },
              "end": {
                "line": 207,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Decay time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterDecay",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "setFilterDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#setFilterDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the sustain value of the filter envelope.\nCalls the setSustain method on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Sustain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 209,
              "column": 4
            },
            "end": {
              "line": 213,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 214,
                "column": 4
              },
              "end": {
                "line": 214,
                "column": 62
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Sustain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterSustain",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "setFilterSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#setFilterSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the release time of the filter envelope.\nCalls the setRelease method on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Release time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 216,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 221,
                "column": 4
              },
              "end": {
                "line": 221,
                "column": 62
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Release time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterRelease",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "setFilterRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#setFilterRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the modifier value of the filter envelope.\nCalls the setModifier method on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Filter amount",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 228,
                "column": 4
              },
              "end": {
                "line": 228,
                "column": 62
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter amount"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterAmount",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "setFilterAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#setFilterAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Plays the note given.\nCalls the Synth::noteOn and triggerAttack on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Note to be played",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "String"
              },
              "name": "note"
            }
          ],
          "loc": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 236,
                "column": 4
              },
              "end": {
                "line": 239,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "note",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Note to be played"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "noteOn",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "noteOn",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#noteOn"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Releases the note given if it matches the current note.\nIf a note is not given, it will release any current note being played.\nCalls the Synth::noteOff and triggerRelease on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Note to be released (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "String"
                }
              },
              "name": "note"
            }
          ],
          "loc": {
            "start": {
              "line": 241,
              "column": 4
            },
            "end": {
              "line": 246,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 247,
                "column": 4
              },
              "end": {
                "line": 253,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "note",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Note to be released (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "String"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "noteOff",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "noteOff",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#noteOff"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Stops any note currently being played.\nCalls the Synth::noteStop and triggerStop on the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 255,
              "column": 4
            },
            "end": {
              "line": 258,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 259,
                "column": 4
              },
              "end": {
                "line": 262,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/MonoSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "noteStop",
          "kind": "member",
          "memberof": "MonoSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MonoSynth",
              "kind": "class"
            },
            {
              "name": "noteStop",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "MonoSynth#noteStop"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MonoSynth",
        "kind": "class"
      }
    ],
    "namespace": "MonoSynth"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A general-purpose source node composed of an Oscillator connected to a Gain node."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "const osc = new Dot.Osc(AC, { waveform: 'square' })",
        "lineNumber": 3
      },
      {
        "title": "extends",
        "description": null,
        "lineNumber": 6,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "Waveform of the oscillator (default: 'sine')",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "opts.waveform"
      },
      {
        "title": "param",
        "description": "Frequency of the oscillator in Hz (default: 440)",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        },
        "name": "opts.frequency"
      },
      {
        "title": "param",
        "description": "Detune of the oscillator in cents (default: 0)",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.detune"
      },
      {
        "title": "param",
        "description": "Gain value of the gain node (default: 1)",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gain"
      },
      {
        "title": "params",
        "description": "frequency - Frequency of the oscillator\ndetune - Detune of the oscillator\ngain - Gain of the gain node",
        "lineNumber": 13
      },
      {
        "title": "returns",
        "description": "Osc Node",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Osc"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 12,
        "column": 0
      },
      "end": {
        "line": 30,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 115,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Osc.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 6,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [
      {
        "description": "const osc = new Dot.Osc(AC, { waveform: 'square' })"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.waveform",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Waveform of the oscillator (default: 'sine')"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "String"
            }
          },
          {
            "title": "param",
            "name": "opts.frequency",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Frequency of the oscillator in Hz (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Boolean"
            }
          },
          {
            "title": "param",
            "name": "opts.detune",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Detune of the oscillator in cents (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gain",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Gain value of the gain node (default: 1)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Osc Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Osc"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "Osc",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the waveform of the oscillator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Waveform",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 61,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 65,
                "column": 4
              },
              "end": {
                "line": 65,
                "column": 42
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Osc.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Waveform"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getWaveform",
          "kind": "member",
          "memberof": "Osc",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Osc",
              "kind": "class"
            },
            {
              "name": "getWaveform",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Osc#getWaveform"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the frequency of the oscillator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Frequency",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 71,
                "column": 4
              },
              "end": {
                "line": 71,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Osc.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFrequency",
          "kind": "member",
          "memberof": "Osc",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Osc",
              "kind": "class"
            },
            {
              "name": "getFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Osc#getFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the detune of the oscillator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Detune",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 77,
                "column": 4
              },
              "end": {
                "line": 77,
                "column": 46
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Osc.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getDetune",
          "kind": "member",
          "memberof": "Osc",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Osc",
              "kind": "class"
            },
            {
              "name": "getDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Osc#getDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the gain of the gain node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Gain",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 83,
                "column": 4
              },
              "end": {
                "line": 83,
                "column": 42
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Osc.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGain",
          "kind": "member",
          "memberof": "Osc",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Osc",
              "kind": "class"
            },
            {
              "name": "getGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Osc#getGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the waveform of the oscillator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Waveform",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 86,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 90,
                "column": 4
              },
              "end": {
                "line": 90,
                "column": 48
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Osc.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Waveform"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setWaveform",
          "kind": "member",
          "memberof": "Osc",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Osc",
              "kind": "class"
            },
            {
              "name": "setWaveform",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Osc#setWaveform"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the frequency of the oscillator.\nCalls the setFrequency method on the oscillator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 92,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 98,
                "column": 4
              },
              "end": {
                "line": 98,
                "column": 66
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Osc.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFrequency",
          "kind": "member",
          "memberof": "Osc",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Osc",
              "kind": "class"
            },
            {
              "name": "setFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Osc#setFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the detune of the oscillator.\nCalls the setDetune method on the oscillator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Detune",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 106,
                "column": 4
              },
              "end": {
                "line": 106,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Osc.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setDetune",
          "kind": "member",
          "memberof": "Osc",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Osc",
              "kind": "class"
            },
            {
              "name": "setDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Osc#setDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain of the gain node.\nCalls the setGain method on the gain node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Gain",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 114,
                "column": 4
              },
              "end": {
                "line": 114,
                "column": 57
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Osc.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGain",
          "kind": "member",
          "memberof": "Osc",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Osc",
              "kind": "class"
            },
            {
              "name": "setGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Osc#setGain"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Osc",
        "kind": "class"
      }
    ],
    "namespace": "Osc"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "General-purpose polyphonic synth node that supports up to 8 voices.\nBuilt using MonoSynths."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "const polySynth = new Dot.PolySynth(AC, { polyphony: 4 })",
        "lineNumber": 4
      },
      {
        "title": "extends",
        "description": null,
        "lineNumber": 7,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "The number of voices (default: 8)",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.polyphony"
      },
      {
        "title": "param",
        "description": "The waveform of the node's oscillators (default: 'sine')",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "opts.waveform"
      },
      {
        "title": "param",
        "description": "The frequency of the node's oscillators (default: 440)",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.frequency"
      },
      {
        "title": "param",
        "description": "The detune of the node's oscillators (default: 0)",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.detune"
      },
      {
        "title": "param",
        "description": "The attack time of the gain envelope (default: 0)",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainAttack"
      },
      {
        "title": "param",
        "description": "The decay time of the gain envelope (default: 0)",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainDecay"
      },
      {
        "title": "param",
        "description": "The sustain value of the gain envelope (default: 1)",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainSustain"
      },
      {
        "title": "param",
        "description": "The release time of the gain envelope (default: 0)",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainRelease"
      },
      {
        "title": "param",
        "description": "The gain modifier of the gain envelope (default: 0.15)",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainAmount"
      },
      {
        "title": "param",
        "description": "The cutoff frequency of the filter envelope' filter (default: 2000)",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterFrequency"
      },
      {
        "title": "param",
        "description": "The q value of the filter envelope's filter (default: 0)",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterQ"
      },
      {
        "title": "param",
        "description": "The detune of the filter envelope's filter (default: 0)",
        "lineNumber": 21,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterDetune"
      },
      {
        "title": "param",
        "description": "The gain value of the filter envelope's filter (default: 0)",
        "lineNumber": 22,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterGain"
      },
      {
        "title": "param",
        "description": "The filter type of the filter envelope's filter (default: 'lowpass')",
        "lineNumber": 23,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "opts.filterType"
      },
      {
        "title": "param",
        "description": "The attack time of the filter envelope (default: 0)",
        "lineNumber": 24,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterAttack"
      },
      {
        "title": "param",
        "description": "The decay time of the filter envelope (default: 0)",
        "lineNumber": 25,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterDecay"
      },
      {
        "title": "param",
        "description": "The sustain value of the filter envelope (default: 1)",
        "lineNumber": 26,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterSustain"
      },
      {
        "title": "param",
        "description": "The release time of the filter envelope (default: 0)",
        "lineNumber": 27,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterRelease"
      },
      {
        "title": "param",
        "description": "The frequency modifier of the filter envelope (default: 6000)",
        "lineNumber": 28,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.filterAmount"
      },
      {
        "title": "params",
        "description": "frequency - The frequency of each of the voices\ndetune - The detune value of each of the voices\ngain - The gain value of each of the voices\nfilterFrequency - The filter frequncy of each of the voices\nfilterQ - The filter q value of each of the voices\nfilterDetune - The filter detune of each of the voices\nfilterGain - The filter gain of each of the voices",
        "lineNumber": 29
      },
      {
        "title": "returns",
        "description": "PolySynth Node",
        "lineNumber": 37,
        "type": {
          "type": "NameExpression",
          "name": "PolySynth"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 28,
        "column": 0
      },
      "end": {
        "line": 66,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 67,
          "column": 0
        },
        "end": {
          "line": 421,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 7,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [
      {
        "description": "const polySynth = new Dot.PolySynth(AC, { polyphony: 4 })"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.polyphony",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of voices (default: 8)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.waveform",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The waveform of the node's oscillators (default: 'sine')"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "String"
            }
          },
          {
            "title": "param",
            "name": "opts.frequency",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The frequency of the node's oscillators (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.detune",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The detune of the node's oscillators (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainAttack",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The attack time of the gain envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainDecay",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The decay time of the gain envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainSustain",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The sustain value of the gain envelope (default: 1)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainRelease",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The release time of the gain envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainAmount",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain modifier of the gain envelope (default: 0.15)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterFrequency",
            "lineNumber": 19,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The cutoff frequency of the filter envelope' filter (default: 2000)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterQ",
            "lineNumber": 20,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The q value of the filter envelope's filter (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterDetune",
            "lineNumber": 21,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The detune of the filter envelope's filter (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterGain",
            "lineNumber": 22,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain value of the filter envelope's filter (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterType",
            "lineNumber": 23,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The filter type of the filter envelope's filter (default: 'lowpass')"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "String"
            }
          },
          {
            "title": "param",
            "name": "opts.filterAttack",
            "lineNumber": 24,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The attack time of the filter envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterDecay",
            "lineNumber": 25,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The decay time of the filter envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterSustain",
            "lineNumber": 26,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The sustain value of the filter envelope (default: 1)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterRelease",
            "lineNumber": 27,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The release time of the filter envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.filterAmount",
            "lineNumber": 28,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The frequency modifier of the filter envelope (default: 6000)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "PolySynth Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "PolySynth"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "PolySynth",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the polyphony setting of the node"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Polyphony setting",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 125,
                "column": 4
              },
              "end": {
                "line": 125,
                "column": 39
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Polyphony setting"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getPolyphony",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getPolyphony",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getPolyphony"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the waveform of the node's oscillators"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Waveform",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 128,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 132,
                "column": 4
              },
              "end": {
                "line": 132,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Waveform"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getWaveform",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getWaveform",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getWaveform"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the detune of the node's oscillators"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Detune value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 138,
                "column": 4
              },
              "end": {
                "line": 138,
                "column": 48
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getDetune",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the attack time of the gain envelope"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Attack time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 141,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 145,
                "column": 4
              },
              "end": {
                "line": 145,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Attack time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainAttack",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getGainAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getGainAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the decay time of the gain envelope"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Decay time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 151,
                "column": 4
              },
              "end": {
                "line": 151,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Decay time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainDecay",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getGainDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getGainDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the sustain value of the gain envelope"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Sustain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 157,
                "column": 4
              },
              "end": {
                "line": 157,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Sustain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainSustain",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getGainSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getGainSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the release time of the gain envelope"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Release time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 163,
                "column": 4
              },
              "end": {
                "line": 163,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Release time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainRelease",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getGainRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getGainRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the gain modifier of the gain envelope"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Modifier value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 169,
                "column": 4
              },
              "end": {
                "line": 169,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modifier value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainAmount",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getGainAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getGainAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the frequency of the filter envelope's filter"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Frequency value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 172,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 176,
                "column": 4
              },
              "end": {
                "line": 176,
                "column": 66
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterFrequency",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getFilterFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getFilterFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the detune of the filter envelope's filter"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Detune value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 182,
                "column": 4
              },
              "end": {
                "line": 182,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterDetune",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getFilterDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getFilterDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the Q value of the filter envelope's filter"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Q value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 188,
                "column": 4
              },
              "end": {
                "line": 188,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Q value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterQ",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getFilterQ",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getFilterQ"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the gain value of the filter envelope's filter"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Gain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 190,
              "column": 4
            },
            "end": {
              "line": 193,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 194,
                "column": 4
              },
              "end": {
                "line": 194,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterGain",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getFilterGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getFilterGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the filter type of the filter envelope's filter"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Filter type",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 196,
              "column": 4
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 200,
                "column": 4
              },
              "end": {
                "line": 200,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter type"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterType",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getFilterType",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getFilterType"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the attack time of the filter envelope"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Attack time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 207,
                "column": 4
              },
              "end": {
                "line": 207,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Attack time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterAttack",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getFilterAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getFilterAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the decay time of the filter envelope"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Decay time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 209,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 213,
                "column": 4
              },
              "end": {
                "line": 213,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Decay time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterDecay",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getFilterDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getFilterDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the sustain value of the filter envelope"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Sustain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 218,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 219,
                "column": 4
              },
              "end": {
                "line": 219,
                "column": 62
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Sustain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterSustain",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getFilterSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getFilterSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the release time of the filter envelope"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Release time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 221,
              "column": 4
            },
            "end": {
              "line": 224,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 225,
                "column": 4
              },
              "end": {
                "line": 225,
                "column": 62
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Release time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterRelease",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getFilterRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getFilterRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the frequency modifier of the filter envelope"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Modifier value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 227,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 231,
                "column": 4
              },
              "end": {
                "line": 231,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modifier value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFilterAmount",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "getFilterAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#getFilterAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the maximum number of active voices for the node"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Polyphony setting",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 237,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 238,
                "column": 4
              },
              "end": {
                "line": 238,
                "column": 61
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Polyphony setting"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setPolyphony",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setPolyphony",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setPolyphony"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the waveform for each of the node's oscillators."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Waveform",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 241,
              "column": 4
            },
            "end": {
              "line": 244,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 245,
                "column": 4
              },
              "end": {
                "line": 245,
                "column": 79
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Waveform"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setWaveform",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setWaveform",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setWaveform"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the detune for each of the node's oscillators."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Detune value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 3,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 251,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 252,
                "column": 4
              },
              "end": {
                "line": 252,
                "column": 87
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setDetune",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the attack time of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Attack time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 255,
              "column": 4
            },
            "end": {
              "line": 258,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 259,
                "column": 4
              },
              "end": {
                "line": 259,
                "column": 83
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Attack time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainAttack",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setGainAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setGainAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the attack time of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Attack time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 264,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 265,
                "column": 4
              },
              "end": {
                "line": 265,
                "column": 81
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Attack time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainDecay",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setGainDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setGainDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the sustain value of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Sustain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 267,
              "column": 4
            },
            "end": {
              "line": 270,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 271,
                "column": 4
              },
              "end": {
                "line": 271,
                "column": 85
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Sustain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainSustain",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setGainSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setGainSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the release time of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Release time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 273,
              "column": 4
            },
            "end": {
              "line": 276,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 277,
                "column": 4
              },
              "end": {
                "line": 277,
                "column": 85
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Release time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainRelease",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setGainRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setGainRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain modifier of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Modifier amount",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 282,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 283,
                "column": 4
              },
              "end": {
                "line": 283,
                "column": 83
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modifier amount"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainAmount",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setGainAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setGainAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the cutoff frequency of the filter envelope's filter."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Frequency value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 3,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 290,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 291,
                "column": 4
              },
              "end": {
                "line": 291,
                "column": 105
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterFrequency",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setFilterFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setFilterFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the detune of the filter envelope's filter."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Detune value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 3,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 293,
              "column": 4
            },
            "end": {
              "line": 297,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 298,
                "column": 4
              },
              "end": {
                "line": 298,
                "column": 99
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterDetune",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setFilterDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setFilterDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the Q value of the filter envelope's filter."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Q value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 3,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 300,
              "column": 4
            },
            "end": {
              "line": 304,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 305,
                "column": 4
              },
              "end": {
                "line": 305,
                "column": 89
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Q value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterQ",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setFilterQ",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setFilterQ"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain of the filter envelope's filter."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Gain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 3,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 307,
              "column": 4
            },
            "end": {
              "line": 311,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 312,
                "column": 4
              },
              "end": {
                "line": 312,
                "column": 95
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterGain",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setFilterGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setFilterGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the filter type of the filter envelope's filter."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Filter type",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 314,
              "column": 4
            },
            "end": {
              "line": 317,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 318,
                "column": 4
              },
              "end": {
                "line": 318,
                "column": 83
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter type"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterType",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setFilterType",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setFilterType"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the attack time of the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Attack time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 321,
              "column": 4
            },
            "end": {
              "line": 324,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 325,
                "column": 4
              },
              "end": {
                "line": 325,
                "column": 87
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Attack time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterAttack",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setFilterAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setFilterAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the attack time of the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Attack time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 327,
              "column": 4
            },
            "end": {
              "line": 330,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 331,
                "column": 4
              },
              "end": {
                "line": 331,
                "column": 85
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Attack time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterDecay",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setFilterDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setFilterDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the sustain value of the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Sustain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 333,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 337,
                "column": 4
              },
              "end": {
                "line": 337,
                "column": 89
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Sustain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterSustain",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setFilterSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setFilterSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the release time of the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Release time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 339,
              "column": 4
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 343,
                "column": 4
              },
              "end": {
                "line": 343,
                "column": 89
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Release time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterRelease",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setFilterRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setFilterRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the frequency modifier of the filter envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Modifier amount",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 345,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 349,
                "column": 4
              },
              "end": {
                "line": 349,
                "column": 87
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modifier amount"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFilterAmount",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "setFilterAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#setFilterAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Plays the given note or array of notes."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Note(s) to be played",
              "lineNumber": 2,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "String"
                  },
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "String"
                      }
                    ]
                  }
                ]
              },
              "name": "note"
            }
          ],
          "loc": {
            "start": {
              "line": 352,
              "column": 4
            },
            "end": {
              "line": 355,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 356,
                "column": 4
              },
              "end": {
                "line": 378,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "note",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Note(s) to be played"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "String"
                  },
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "String"
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "noteOn",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "noteOn",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#noteOn"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Releases the note or array of notes given.\nIf a note is not given, it will release all current notes being played."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Note(s) to be released (optional)",
              "lineNumber": 3,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "String"
                    },
                    {
                      "type": "TypeApplication",
                      "expression": {
                        "type": "NameExpression",
                        "name": "Array"
                      },
                      "applications": [
                        {
                          "type": "NameExpression",
                          "name": "String"
                        }
                      ]
                    }
                  ]
                }
              },
              "name": "note"
            }
          ],
          "loc": {
            "start": {
              "line": 380,
              "column": 4
            },
            "end": {
              "line": 384,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 385,
                "column": 4
              },
              "end": {
                "line": 395,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "note",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Note(s) to be released (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "String"
                    },
                    {
                      "type": "TypeApplication",
                      "expression": {
                        "type": "NameExpression",
                        "name": "Array"
                      },
                      "applications": [
                        {
                          "type": "NameExpression",
                          "name": "String"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "noteOff",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "noteOff",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#noteOff"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Stops the note or array of notes given.\nIf a note is not given, it will stop all current notes being played."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Note(s) to be stopped (optional)",
              "lineNumber": 3,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "String"
                    },
                    {
                      "type": "TypeApplication",
                      "expression": {
                        "type": "NameExpression",
                        "name": "Array"
                      },
                      "applications": [
                        {
                          "type": "NameExpression",
                          "name": "String"
                        }
                      ]
                    }
                  ]
                }
              },
              "name": "note"
            }
          ],
          "loc": {
            "start": {
              "line": 397,
              "column": 4
            },
            "end": {
              "line": 401,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 402,
                "column": 4
              },
              "end": {
                "line": 412,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/PolySynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "note",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Note(s) to be stopped (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "String"
                    },
                    {
                      "type": "TypeApplication",
                      "expression": {
                        "type": "NameExpression",
                        "name": "Array"
                      },
                      "applications": [
                        {
                          "type": "NameExpression",
                          "name": "String"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "noteStop",
          "kind": "member",
          "memberof": "PolySynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PolySynth",
              "kind": "class"
            },
            {
              "name": "noteStop",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PolySynth#noteStop"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "PolySynth",
        "kind": "class"
      }
    ],
    "namespace": "PolySynth"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A simple implementation of an FM Synth.\nConsists of one modulator (Osc) connected to the frequency param of a carrier (Synth)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "const simpleFm = new Dot.SimpleFMSynth(AC)",
        "lineNumber": 4
      },
      {
        "title": "extends",
        "description": null,
        "lineNumber": 7,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "Frequency of the modulator's oscillator (default: 440)",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modulatorFrequency"
      },
      {
        "title": "param",
        "description": "Detune of the modulator's oscillator (default: 0)",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modulatorDetune"
      },
      {
        "title": "param",
        "description": "Gain of the modulator's gain node (default: 440)",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modulatorDepth"
      },
      {
        "title": "param",
        "description": "Frequency of the carrier's oscillator (default: 440)",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.carrierFrequency"
      },
      {
        "title": "param",
        "description": "Detune of the carrier's oscillator (default: 0)",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.carrierDetune"
      },
      {
        "title": "param",
        "description": "Attack time of the carrier's gain envelope (default: 0)",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainAttack"
      },
      {
        "title": "param",
        "description": "Decay time of the carrier's gain envelope (default: 0)",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainDecay"
      },
      {
        "title": "param",
        "description": "Sustain value of the carrier's gain envelope (default: 1)",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainSustain"
      },
      {
        "title": "param",
        "description": "Release time of the carrier's gain envelope (default: 0)",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainRelease"
      },
      {
        "title": "param",
        "description": "Modifier of the carrier's gain envelope (default: 0.75)",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainAmount"
      },
      {
        "title": "params",
        "description": "modulatorFrequency - Frequency param of the modulator's oscillator\nmodulatorDetune - Detune param of the modulator's oscillator\nmodulatorDepth - Gain param of the modulator's gain node\ncarrierFrequency - Frequency param of the carrier's oscillator\ncarrierDetune - Detune param of the carrier's oscillator\ncarrierGain - Gain param of the carrier's gain node",
        "lineNumber": 20
      },
      {
        "title": "returns",
        "description": "SimpleFMSynth Node",
        "lineNumber": 27,
        "type": {
          "type": "NameExpression",
          "name": "SimpleFMSynth"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 18,
        "column": 0
      },
      "end": {
        "line": 46,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 47,
          "column": 0
        },
        "end": {
          "line": 254,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 7,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [
      {
        "description": "const simpleFm = new Dot.SimpleFMSynth(AC)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.modulatorFrequency",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Frequency of the modulator's oscillator (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modulatorDetune",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Detune of the modulator's oscillator (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modulatorDepth",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Gain of the modulator's gain node (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.carrierFrequency",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Frequency of the carrier's oscillator (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.carrierDetune",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Detune of the carrier's oscillator (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainAttack",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Attack time of the carrier's gain envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainDecay",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Decay time of the carrier's gain envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainSustain",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Sustain value of the carrier's gain envelope (default: 1)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainRelease",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Release time of the carrier's gain envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainAmount",
            "lineNumber": 19,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Modifier of the carrier's gain envelope (default: 0.75)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "SimpleFMSynth Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "SimpleFMSynth"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "SimpleFMSynth",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the current frequency of the modulator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Modulator frequency",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 91,
                "column": 4
              },
              "end": {
                "line": 91,
                "column": 70
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modulator frequency"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModulatorFrequency",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "getModulatorFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#getModulatorFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the current detune value of the modulator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Modulator detune",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 97,
                "column": 4
              },
              "end": {
                "line": 97,
                "column": 64
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modulator detune"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModulatorDetune",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "getModulatorDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#getModulatorDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the current depth of the modulator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Modulator depth",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 103,
                "column": 4
              },
              "end": {
                "line": 103,
                "column": 62
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modulator depth"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModulatorDepth",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "getModulatorDepth",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#getModulatorDepth"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the current frequency of the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Carrier frequency",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 110,
                "column": 4
              },
              "end": {
                "line": 110,
                "column": 66
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Carrier frequency"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getCarrierFrequency",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "getCarrierFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#getCarrierFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the current detune value of the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Carrier detune",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 116,
                "column": 4
              },
              "end": {
                "line": 116,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Carrier detune"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getCarrierDetune",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "getCarrierDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#getCarrierDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the attack time of the carrier's gain envelope.\nCalls the getGainAttack method on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Carrier gain envelope attack time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 124,
                "column": 4
              },
              "end": {
                "line": 124,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Carrier gain envelope attack time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainAttack",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "getGainAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#getGainAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the decay time of the carrier's gain envelope.\nCalls the getGainDecay method on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Carrier gain envelope decay time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 131,
                "column": 4
              },
              "end": {
                "line": 131,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Carrier gain envelope decay time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainDecay",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "getGainDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#getGainDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the sustain value of the carrier's gain envelope.\nCalls the getGainSustain method on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Carrier gain envelope sustain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 133,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 138,
                "column": 4
              },
              "end": {
                "line": 138,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Carrier gain envelope sustain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainSustain",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "getGainSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#getGainSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the release time of the carrier's gain envelope.\nCalls the getGainRelease method on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Carrier gain envelope release time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 145,
                "column": 4
              },
              "end": {
                "line": 145,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Carrier gain envelope release time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainRelease",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "getGainRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#getGainRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the modifier amount of the carrier's gain envelope.\nCalls the getGainAmount method on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Carrier gain envelope amount",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 152,
                "column": 4
              },
              "end": {
                "line": 152,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Carrier gain envelope amount"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainAmount",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "getGainAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#getGainAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the frequency of the modulator.\nCalls the setFrequency method on the modulator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 156,
              "column": 4
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 162,
                "column": 4
              },
              "end": {
                "line": 162,
                "column": 81
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModulatorFrequency",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "setModulatorFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#setModulatorFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the detune value of the modulator.\nCalls the setDetune method on the modulator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Detune",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 170,
                "column": 4
              },
              "end": {
                "line": 170,
                "column": 75
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModulatorDetune",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "setModulatorDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#setModulatorDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the depth of the modulator.\nCalls the setGain method on the modulator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Depth",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 172,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 178,
                "column": 4
              },
              "end": {
                "line": 178,
                "column": 72
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Depth"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModulatorDepth",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "setModulatorDepth",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#setModulatorDepth"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the frequency of the carrier.\nCalls the setFrequency method on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 181,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 187,
                "column": 4
              },
              "end": {
                "line": 187,
                "column": 77
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setCarrierFrequency",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "setCarrierFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#setCarrierFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the detune value of the carrier.\nCalls the setDetune method on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Detune",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 189,
              "column": 4
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 195,
                "column": 4
              },
              "end": {
                "line": 195,
                "column": 71
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setCarrierDetune",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "setCarrierDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#setCarrierDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the attack time of the carrier's gain envelope.\nCalls the setGainAttack method on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Attack time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 202,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 203,
                "column": 4
              },
              "end": {
                "line": 203,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Attack time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainAttack",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "setGainAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#setGainAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the decay time of the carrier's gain envelope.\nCalls the setGainDecay method on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Decay time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 205,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 210,
                "column": 4
              },
              "end": {
                "line": 210,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Decay time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainDecay",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "setGainDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#setGainDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the sustain value of the carrier's gain envelope.\nCalls the setGainSustain method on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Sustain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 212,
              "column": 4
            },
            "end": {
              "line": 216,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 217,
                "column": 4
              },
              "end": {
                "line": 217,
                "column": 62
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Sustain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainSustain",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "setGainSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#setGainSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the release time of the carrier's gain envelope.\nCalls the setGainRelease method on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Release time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 219,
              "column": 4
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 224,
                "column": 4
              },
              "end": {
                "line": 224,
                "column": 62
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Release time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainRelease",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "setGainRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#setGainRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the modifier amount of the carrier's gain envelope.\nCalls the setGainAmount method on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Modifier value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 226,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 231,
                "column": 4
              },
              "end": {
                "line": 231,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modifier value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainAmount",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "setGainAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#setGainAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Plays the note given.\nCalls the noteOn method on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Note to be played",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "String"
              },
              "name": "note"
            }
          ],
          "loc": {
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 238,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 239,
                "column": 4
              },
              "end": {
                "line": 239,
                "column": 48
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "note",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Note to be played"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "noteOn",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "noteOn",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#noteOn"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Releases the note given if it matches the current note.\nIf a note is not given, it will release any current note being played.\nCalls noteOff on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Note to be released (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "String"
                }
              },
              "name": "note"
            }
          ],
          "loc": {
            "start": {
              "line": 241,
              "column": 4
            },
            "end": {
              "line": 246,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 247,
                "column": 4
              },
              "end": {
                "line": 247,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "note",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Note to be released (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "String"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "noteOff",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "noteOff",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#noteOff"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Stops any note currently being played.\nCalls noteStop on the carrier."
                  }
                ]
              }
            ]
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 249,
              "column": 4
            },
            "end": {
              "line": 252,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 253,
                "column": 4
              },
              "end": {
                "line": 253,
                "column": 44
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/SimpleFMSynth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "noteStop",
          "kind": "member",
          "memberof": "SimpleFMSynth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "SimpleFMSynth",
              "kind": "class"
            },
            {
              "name": "noteStop",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "SimpleFMSynth#noteStop"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "SimpleFMSynth",
        "kind": "class"
      }
    ],
    "namespace": "SimpleFMSynth"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "General-purpose synth node consisting of an Oscillator connected to a GainEnvelope."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "const synth = new Dot.Synth(AC, { gainDecay: 0.25, gainSustain: 0 })\n\nsynth.connect(AC.destination)\nsynth.noteOn('F#4')",
        "lineNumber": 3
      },
      {
        "title": "extends",
        "description": null,
        "lineNumber": 9,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "Initial waveform (default: 'sine')",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "String"
        },
        "name": "opts.waveform"
      },
      {
        "title": "param",
        "description": "Frequency of the oscillator (default: 440)",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        },
        "name": "opts.frequency"
      },
      {
        "title": "param",
        "description": "Detune value of the oscillator (default: 0)",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.detune"
      },
      {
        "title": "param",
        "description": "Attack time of the gain envelope (default: 0)",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainAttack"
      },
      {
        "title": "param",
        "description": "Decay time of the gain envelope (default: 0)",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainDecay"
      },
      {
        "title": "param",
        "description": "Sustain value of the gain envelope (default: 1)",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainSustain"
      },
      {
        "title": "param",
        "description": "Release time of the gain envelope (default: 0)",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainRelease"
      },
      {
        "title": "param",
        "description": "Modifier value of the gain envelope (default: 0.75)",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gainAmount"
      },
      {
        "title": "params",
        "description": "frequency - Frequency of the oscillator\ndetune - Detune value of the oscillator\ngain - Gain value of the gain node",
        "lineNumber": 20
      },
      {
        "title": "returns",
        "description": "Synth Node",
        "lineNumber": 24,
        "type": {
          "type": "NameExpression",
          "name": "Synth"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 17,
        "column": 0
      },
      "end": {
        "line": 42,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 239,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 9,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [
      {
        "description": "const synth = new Dot.Synth(AC, { gainDecay: 0.25, gainSustain: 0 })\n\nsynth.connect(AC.destination)\nsynth.noteOn('F#4')"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.waveform",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Initial waveform (default: 'sine')"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "String"
            }
          },
          {
            "title": "param",
            "name": "opts.frequency",
            "lineNumber": 13,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Frequency of the oscillator (default: 440)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Boolean"
            }
          },
          {
            "title": "param",
            "name": "opts.detune",
            "lineNumber": 14,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Detune value of the oscillator (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainAttack",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Attack time of the gain envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainDecay",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Decay time of the gain envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainSustain",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Sustain value of the gain envelope (default: 1)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainRelease",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Release time of the gain envelope (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gainAmount",
            "lineNumber": 19,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Modifier value of the gain envelope (default: 0.75)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Synth Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Synth"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "Synth",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the note that is currently being played."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Current note",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 83,
                "column": 4
              },
              "end": {
                "line": 83,
                "column": 43
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Current note"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getCurrentNote",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "getCurrentNote",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#getCurrentNote"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the waveform of the oscillator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Oscillator type",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 86,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 90,
                "column": 4
              },
              "end": {
                "line": 90,
                "column": 42
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Oscillator type"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getWaveform",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "getWaveform",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#getWaveform"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the frequency of the oscillator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Oscillator frequency",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 92,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 96,
                "column": 4
              },
              "end": {
                "line": 96,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Oscillator frequency"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFrequency",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "getFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#getFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the detune value of the oscillator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Oscillator detune",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 102,
                "column": 4
              },
              "end": {
                "line": 102,
                "column": 46
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Oscillator detune"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getDetune",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "getDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#getDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the attack time of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Gain attack time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 109,
                "column": 4
              },
              "end": {
                "line": 109,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain attack time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainAttack",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "getGainAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#getGainAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the decay time of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Gain decay time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 111,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 115,
                "column": 4
              },
              "end": {
                "line": 115,
                "column": 48
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain decay time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainDecay",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "getGainDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#getGainDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the sustain value of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Gain sustain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 121,
                "column": 4
              },
              "end": {
                "line": 121,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain sustain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainSustain",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "getGainSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#getGainSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the release time of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Gain release time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 123,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 127,
                "column": 4
              },
              "end": {
                "line": 127,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain release time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainRelease",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "getGainRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#getGainRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the modifier value of the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Gain amount",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 133,
                "column": 4
              },
              "end": {
                "line": 133,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain amount"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGainAmount",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "getGainAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#getGainAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the waveform of the oscillator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Waveform",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 137,
              "column": 4
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 141,
                "column": 4
              },
              "end": {
                "line": 141,
                "column": 48
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Waveform"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setWaveform",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "setWaveform",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#setWaveform"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the frequency of the oscillator.\nCalls the setFrequency method of the oscillator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 149,
                "column": 4
              },
              "end": {
                "line": 149,
                "column": 66
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFrequency",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "setFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#setFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the detune of the oscillator.\nCalls the setDetune method on the oscillator."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Detune value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 151,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 157,
                "column": 4
              },
              "end": {
                "line": 157,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setDetune",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "setDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#setDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the attack time of the gain envelope.\nCalls the setAttack method on the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Attack time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 165,
                "column": 4
              },
              "end": {
                "line": 165,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Attack time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainAttack",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "setGainAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#setGainAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the decay time of the gain envelope.\nCalls the setDecay method on the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Decay time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 172,
                "column": 4
              },
              "end": {
                "line": 172,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Decay time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainDecay",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "setGainDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#setGainDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the sustain value of the gain envelope.\nCalls the setSustain method on the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Sustain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 179,
                "column": 4
              },
              "end": {
                "line": 179,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Sustain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainSustain",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "setGainSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#setGainSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the release time of the gain envelope.\nCalls the setRelease method on the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Release time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 181,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 186,
                "column": 4
              },
              "end": {
                "line": 186,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Release time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainRelease",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "setGainRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#setGainRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain modifier of the gain envelope.\nCalls the setModifier method on the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Modifier amount",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 188,
              "column": 4
            },
            "end": {
              "line": 192,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 193,
                "column": 4
              },
              "end": {
                "line": 193,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modifier amount"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGainAmount",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "setGainAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#setGainAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Plays the note given.\nSets the frequency of the oscillator and calls triggerAttack on the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Note to be played",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "String"
              },
              "name": "note"
            }
          ],
          "loc": {
            "start": {
              "line": 196,
              "column": 4
            },
            "end": {
              "line": 200,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 201,
                "column": 4
              },
              "end": {
                "line": 201,
                "column": 41
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "note",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Note to be played"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "noteOn",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "noteOn",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#noteOn"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Releases the note given if it matches the current note.\nIf a note is not given, it will release any current note being played.\nCalls triggerRelease on the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Note to be released (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "String"
                }
              },
              "name": "note"
            }
          ],
          "loc": {
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 209,
                "column": 4
              },
              "end": {
                "line": 209,
                "column": 43
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "note",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Note to be released (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "String"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "noteOff",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "noteOff",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#noteOff"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Stops any note currently being played.\nCalls triggerStop on the gain envelope."
                  }
                ]
              }
            ]
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 215,
                "column": 4
              },
              "end": {
                "line": 215,
                "column": 37
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/instruments/Synth.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "noteStop",
          "kind": "member",
          "memberof": "Synth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Synth",
              "kind": "class"
            },
            {
              "name": "noteStop",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Synth#noteStop"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Synth",
        "kind": "class"
      }
    ],
    "namespace": "Synth"
  }
]