[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A Chorus effect used to adds width and texture to the incoming signal."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "The dry/wet amount for the node (default: 0)",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.amount"
      },
      {
        "title": "param",
        "description": "The delay time of the chorus modulation (default: 0.04)",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.delayTime"
      },
      {
        "title": "param",
        "description": "The depth of the chorus modulation (default: 0.005)",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.depth"
      },
      {
        "title": "param",
        "description": "The rate of the chorus modulation (default: 0.25)",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.rate"
      },
      {
        "title": "param",
        "description": "The gain for the feedback signal (default: 0.4)",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.feedback"
      },
      {
        "title": "params",
        "description": "delayTime - Delay time of the delay nodes\nfeedback - Gain of the feedback gain node\nrate - Rate of the LFOs connected to the delay times\ndepth - Depth of the LFOs connected to the delay times",
        "lineNumber": 11
      },
      {
        "title": "returns",
        "description": "Chorus Node",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Chorus"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 18,
        "column": 0
      },
      "end": {
        "line": 35,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 168,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Chorus.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.amount",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The dry/wet amount for the node (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.delayTime",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The delay time of the chorus modulation (default: 0.04)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.depth",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The depth of the chorus modulation (default: 0.005)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.rate",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The rate of the chorus modulation (default: 0.25)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.feedback",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain for the feedback signal (default: 0.4)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Chorus Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Chorus"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "Chorus",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the dry/wet amount level of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Dry/wet amount",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 86,
                "column": 4
              },
              "end": {
                "line": 86,
                "column": 44
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Chorus.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Dry/wet amount"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getAmount",
          "kind": "member",
          "memberof": "Chorus",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Chorus",
              "kind": "class"
            },
            {
              "name": "getAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Chorus#getAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the delay time of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Delay time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 92,
                "column": 4
              },
              "end": {
                "line": 92,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Chorus.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Delay time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getDelayTime",
          "kind": "member",
          "memberof": "Chorus",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Chorus",
              "kind": "class"
            },
            {
              "name": "getDelayTime",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Chorus#getDelayTime"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the feedback amount"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Feedback amount",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 98,
                "column": 4
              },
              "end": {
                "line": 98,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Chorus.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Feedback amount"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFeedback",
          "kind": "member",
          "memberof": "Chorus",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Chorus",
              "kind": "class"
            },
            {
              "name": "getFeedback",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Chorus#getFeedback"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the rate of the chorus modulation."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Modulation rate",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 104,
                "column": 4
              },
              "end": {
                "line": 104,
                "column": 42
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Chorus.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modulation rate"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getRate",
          "kind": "member",
          "memberof": "Chorus",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Chorus",
              "kind": "class"
            },
            {
              "name": "getRate",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Chorus#getRate"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the depth of the chorus modulation."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Modulation depth",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 110,
                "column": 4
              },
              "end": {
                "line": 110,
                "column": 44
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Chorus.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modulation depth"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getDepth",
          "kind": "member",
          "memberof": "Chorus",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Chorus",
              "kind": "class"
            },
            {
              "name": "getDepth",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Chorus#getDepth"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the dry/wet amount of the node.\nUses linearFadeUpdate method to evenly fade and to allow for changes over time."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Dry/set amount",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 119,
                "column": 4
              },
              "end": {
                "line": 126,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Chorus.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Dry/set amount"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setAmount",
          "kind": "member",
          "memberof": "Chorus",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Chorus",
              "kind": "class"
            },
            {
              "name": "setAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Chorus#setAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the feedback gain of the node.\nCalls the setGain method of the feedback gain node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Feedback",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 128,
              "column": 4
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 134,
                "column": 4
              },
              "end": {
                "line": 134,
                "column": 65
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Chorus.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Feedback"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFeedback",
          "kind": "member",
          "memberof": "Chorus",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Chorus",
              "kind": "class"
            },
            {
              "name": "setFeedback",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Chorus#setFeedback"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the rate of the chorus modulation.\nCalls the setRate method of both delay time lfos."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "depth",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 142,
                "column": 4
              },
              "end": {
                "line": 145,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Chorus.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "depth"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setRate",
          "kind": "member",
          "memberof": "Chorus",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Chorus",
              "kind": "class"
            },
            {
              "name": "setRate",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Chorus#setRate"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the depth of the chorus modulation.\nCalls the setDepth method of both delay time lfos."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "depth",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 153,
                "column": 4
              },
              "end": {
                "line": 156,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Chorus.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "depth"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setDepth",
          "kind": "member",
          "memberof": "Chorus",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Chorus",
              "kind": "class"
            },
            {
              "name": "setDepth",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Chorus#setDepth"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the delay time of the node.\nCalls the setDelayTime method of both delay nodes."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Delay time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 164,
                "column": 4
              },
              "end": {
                "line": 167,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Chorus.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Delay time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setDelayTime",
          "kind": "member",
          "memberof": "Chorus",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Chorus",
              "kind": "class"
            },
            {
              "name": "setDelayTime",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Chorus#setDelayTime"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Chorus",
        "kind": "class"
      }
    ],
    "namespace": "Chorus"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A Distortion effect used to clip/distort the incoming signal."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "The dry/wet amount for the node (default: 0)",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.amount"
      },
      {
        "title": "param",
        "description": "The distortion amount to generate the waveshaping curve (default: 0)",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.distortion"
      },
      {
        "title": "returns",
        "description": "Distortion Node",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Distortion"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 20,
        "column": 0
      },
      "end": {
        "line": 29,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 90,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Distortion.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.amount",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The dry/wet amount for the node (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.distortion",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The distortion amount to generate the waveshaping curve (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Distortion Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Distortion"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "Distortion",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the dry/wet amount level of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Dry/wet amount",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 54,
              "column": 4
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 58,
                "column": 4
              },
              "end": {
                "line": 58,
                "column": 44
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Distortion.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Dry/wet amount"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getAmount",
          "kind": "member",
          "memberof": "Distortion",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Distortion",
              "kind": "class"
            },
            {
              "name": "getAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Distortion#getAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the distortion value of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Distortion value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 60,
              "column": 4
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 64,
                "column": 4
              },
              "end": {
                "line": 64,
                "column": 41
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Distortion.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Distortion value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getDistortion",
          "kind": "member",
          "memberof": "Distortion",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Distortion",
              "kind": "class"
            },
            {
              "name": "getDistortion",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Distortion#getDistortion"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the dry/wet amount of the node.\nUses linearFadeUpdate method to evenly fade and to allow for changes over time."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Dry/set amount",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 72,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 73,
                "column": 4
              },
              "end": {
                "line": 80,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Distortion.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Dry/set amount"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setAmount",
          "kind": "member",
          "memberof": "Distortion",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Distortion",
              "kind": "class"
            },
            {
              "name": "setAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Distortion#setAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the distortion value of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Distortion value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 86,
                "column": 4
              },
              "end": {
                "line": 89,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Distortion.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Distortion value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setDistortion",
          "kind": "member",
          "memberof": "Distortion",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Distortion",
              "kind": "class"
            },
            {
              "name": "setDistortion",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Distortion#setDistortion"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Distortion",
        "kind": "class"
      }
    ],
    "namespace": "Distortion"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A 2-band equalizer node for adjusting the gain of the high and low frequencies of the incoming signal."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "The frequency of the low band (default: 320)",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.lowFrequency"
      },
      {
        "title": "param",
        "description": "The gain value of the low band (default: 0)",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.lowGain"
      },
      {
        "title": "param",
        "description": "The frequency of the high band (default: 3200)",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.highFrequency"
      },
      {
        "title": "param",
        "description": "The gain value of the high band (default: 0)",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.highGain"
      },
      {
        "title": "params",
        "description": "lowFrequency - The frequency of the low band (filter node)\nlowGain - The gain of the low band (filter node)\nhighFrequency - The frequency of the high band (filter node)\nhighGain - The gain of the high band (filter node)",
        "lineNumber": 10
      },
      {
        "title": "returns",
        "description": "EQ2 Node",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "EQ2"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 11,
        "column": 0
      },
      "end": {
        "line": 27,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 28,
          "column": 0
        },
        "end": {
          "line": 113,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/EQ2.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.lowFrequency",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The frequency of the low band (default: 320)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.lowGain",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain value of the low band (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.highFrequency",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The frequency of the high band (default: 3200)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.highGain",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain value of the high band (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "EQ2 Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "EQ2"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "EQ2",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the frequency of the low band."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Low band frequency",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 61,
                "column": 4
              },
              "end": {
                "line": 61,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/EQ2.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Low band frequency"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getLowFrequency",
          "kind": "member",
          "memberof": "EQ2",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "EQ2",
              "kind": "class"
            },
            {
              "name": "getLowFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "EQ2#getLowFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the gain value of the low band."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Low band gain",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 67,
                "column": 4
              },
              "end": {
                "line": 67,
                "column": 48
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/EQ2.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Low band gain"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getLowGain",
          "kind": "member",
          "memberof": "EQ2",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "EQ2",
              "kind": "class"
            },
            {
              "name": "getLowGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "EQ2#getLowGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the frequency of the high band."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "High band frequency",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 72,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 73,
                "column": 4
              },
              "end": {
                "line": 73,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/EQ2.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "High band frequency"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getHighFrequency",
          "kind": "member",
          "memberof": "EQ2",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "EQ2",
              "kind": "class"
            },
            {
              "name": "getHighFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "EQ2#getHighFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the gain value of the high band."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "High band gain",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 79,
                "column": 4
              },
              "end": {
                "line": 79,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/EQ2.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "High band gain"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getHighGain",
          "kind": "member",
          "memberof": "EQ2",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "EQ2",
              "kind": "class"
            },
            {
              "name": "getHighGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "EQ2#getHighGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the frequency of the low band.\nCalls the setFrequency method of the low band (filter node)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 88,
                "column": 4
              },
              "end": {
                "line": 88,
                "column": 69
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/EQ2.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "frequency"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setLowFrequency",
          "kind": "member",
          "memberof": "EQ2",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "EQ2",
              "kind": "class"
            },
            {
              "name": "setLowFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "EQ2#setLowFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain value of the low band.\nCalls the setGain method of the low band (filter node)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "gain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 96,
                "column": 4
              },
              "end": {
                "line": 96,
                "column": 59
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/EQ2.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "gain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setLowGain",
          "kind": "member",
          "memberof": "EQ2",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "EQ2",
              "kind": "class"
            },
            {
              "name": "setLowGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "EQ2#setLowGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the frequency of the high band.\nCalls the setFrequency method of the high band (filter node)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 104,
                "column": 4
              },
              "end": {
                "line": 104,
                "column": 71
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/EQ2.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "frequency"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setHighFrequency",
          "kind": "member",
          "memberof": "EQ2",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "EQ2",
              "kind": "class"
            },
            {
              "name": "setHighFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "EQ2#setHighFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain value of the high band.\nCalls the setGain method of the high band (filter node)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "gain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 112,
                "column": 4
              },
              "end": {
                "line": 112,
                "column": 61
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/EQ2.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "gain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setHighGain",
          "kind": "member",
          "memberof": "EQ2",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "EQ2",
              "kind": "class"
            },
            {
              "name": "setHighGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "EQ2#setHighGain"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "EQ2",
        "kind": "class"
      }
    ],
    "namespace": "EQ2"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A feedback delay effect to adds echos and other delay-based effects to the incoming signal."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "The dry/wet amount of the node (default: 0)",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.amount"
      },
      {
        "title": "param",
        "description": "The delay time of the delay node (default: 0.2)",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.delayTime"
      },
      {
        "title": "param",
        "description": "The gain value of the feedback gain node (default: 0.6)",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.feedback"
      },
      {
        "title": "param",
        "description": "The cutoff frequency of the low-pass filter (default: 4400)",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.tone"
      },
      {
        "title": "params",
        "description": "delayTime - The delay time of the delay node\nfeedback - The gain value of the feedback gain node\ntone - The frequency of the low-pass filter",
        "lineNumber": 10
      },
      {
        "title": "returns",
        "description": "FeedbackDelay Node",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "FeedbackDelay"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 13,
        "column": 0
      },
      "end": {
        "line": 28,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 29,
          "column": 0
        },
        "end": {
          "line": 128,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/FeedbackDelay.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.amount",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The dry/wet amount of the node (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.delayTime",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The delay time of the delay node (default: 0.2)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.feedback",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain value of the feedback gain node (default: 0.6)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.tone",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The cutoff frequency of the low-pass filter (default: 4400)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "FeedbackDelay Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "FeedbackDelay"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "FeedbackDelay",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the dry/wet amount of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Dry/set amount",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 64,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 68,
                "column": 4
              },
              "end": {
                "line": 68,
                "column": 33
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/FeedbackDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Dry/set amount"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getAmount",
          "kind": "member",
          "memberof": "FeedbackDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FeedbackDelay",
              "kind": "class"
            },
            {
              "name": "getAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FeedbackDelay#getAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the delay time of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Delay time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 74,
                "column": 4
              },
              "end": {
                "line": 74,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/FeedbackDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Delay time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getDelayTime",
          "kind": "member",
          "memberof": "FeedbackDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FeedbackDelay",
              "kind": "class"
            },
            {
              "name": "getDelayTime",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FeedbackDelay#getDelayTime"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the feedback of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Feedback value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 80,
                "column": 4
              },
              "end": {
                "line": 80,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/FeedbackDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Feedback value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFeedback",
          "kind": "member",
          "memberof": "FeedbackDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FeedbackDelay",
              "kind": "class"
            },
            {
              "name": "getFeedback",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FeedbackDelay#getFeedback"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the tone value of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Tone frequency",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 86,
                "column": 4
              },
              "end": {
                "line": 86,
                "column": 42
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/FeedbackDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Tone frequency"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getTone",
          "kind": "member",
          "memberof": "FeedbackDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FeedbackDelay",
              "kind": "class"
            },
            {
              "name": "getTone",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FeedbackDelay#getTone"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the dry/wet amount of the node.\nUses dryWetUpdate method to allow for changes over time."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Dry/set amount",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 94,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 95,
                "column": 4
              },
              "end": {
                "line": 103,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/FeedbackDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Dry/set amount"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setAmount",
          "kind": "member",
          "memberof": "FeedbackDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FeedbackDelay",
              "kind": "class"
            },
            {
              "name": "setAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FeedbackDelay#setAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the delay time of the node.\nCalls the setDelayTime method of the delay node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "delay time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 111,
                "column": 4
              },
              "end": {
                "line": 111,
                "column": 68
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/FeedbackDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "delay time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setDelayTime",
          "kind": "member",
          "memberof": "FeedbackDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FeedbackDelay",
              "kind": "class"
            },
            {
              "name": "setDelayTime",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FeedbackDelay#setDelayTime"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the feedback value of the node.\nCalls the setGain method of the feedback gain."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "feedback gain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 119,
                "column": 4
              },
              "end": {
                "line": 119,
                "column": 69
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/FeedbackDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "feedback gain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFeedback",
          "kind": "member",
          "memberof": "FeedbackDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FeedbackDelay",
              "kind": "class"
            },
            {
              "name": "setFeedback",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FeedbackDelay#setFeedback"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the tone value of the node.\nCalls the setFrequency method of the tone (filter node)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "tone frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 127,
                "column": 4
              },
              "end": {
                "line": 127,
                "column": 62
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/FeedbackDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "tone frequency"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setTone",
          "kind": "member",
          "memberof": "FeedbackDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FeedbackDelay",
              "kind": "class"
            },
            {
              "name": "setTone",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FeedbackDelay#setTone"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "FeedbackDelay",
        "kind": "class"
      }
    ],
    "namespace": "FeedbackDelay"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A Flanger effect used to adds width and texture to the incoming signal."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "The dry/wet amount for the node (default: 0)",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.amount"
      },
      {
        "title": "param",
        "description": "The delay time of the flanger modulation (default: 0.01)",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.delayTime"
      },
      {
        "title": "param",
        "description": "The depth of the flanger modulation (default: 0.0015)",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.depth"
      },
      {
        "title": "param",
        "description": "The rate of the flanger modulation (default: 0.3333)",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.rate"
      },
      {
        "title": "param",
        "description": "The gain for the feedback signal (default: 0.6666)",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.feedback"
      },
      {
        "title": "params",
        "description": "delayTime - Delay time of the delay node\nfeedback - Gain of the feedback gain node\nrate - Rate of the LFO connected to the delay time\ndepth - Depth of the LFO connected to the delay time",
        "lineNumber": 11
      },
      {
        "title": "returns",
        "description": "Flanger Node",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Flanger"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 14,
        "column": 0
      },
      "end": {
        "line": 31,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 32,
          "column": 0
        },
        "end": {
          "line": 148,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Flanger.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.amount",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The dry/wet amount for the node (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.delayTime",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The delay time of the flanger modulation (default: 0.01)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.depth",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The depth of the flanger modulation (default: 0.0015)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.rate",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The rate of the flanger modulation (default: 0.3333)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.feedback",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain for the feedback signal (default: 0.6666)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Flanger Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Flanger"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "Flanger",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the dry/wet amount level of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Dry/wet amount",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 71,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 75,
                "column": 4
              },
              "end": {
                "line": 75,
                "column": 44
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Flanger.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Dry/wet amount"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getAmount",
          "kind": "member",
          "memberof": "Flanger",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Flanger",
              "kind": "class"
            },
            {
              "name": "getAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Flanger#getAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the delay time of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Delay time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 81,
                "column": 4
              },
              "end": {
                "line": 81,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Flanger.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Delay time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getDelayTime",
          "kind": "member",
          "memberof": "Flanger",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Flanger",
              "kind": "class"
            },
            {
              "name": "getDelayTime",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Flanger#getDelayTime"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the depth of the flanger modulation."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Modulation depth",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 83,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 87,
                "column": 4
              },
              "end": {
                "line": 87,
                "column": 44
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Flanger.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modulation depth"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getDepth",
          "kind": "member",
          "memberof": "Flanger",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Flanger",
              "kind": "class"
            },
            {
              "name": "getDepth",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Flanger#getDepth"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the feedback amount."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Feedback amount",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 93,
                "column": 4
              },
              "end": {
                "line": 93,
                "column": 50
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Flanger.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Feedback amount"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFeedback",
          "kind": "member",
          "memberof": "Flanger",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Flanger",
              "kind": "class"
            },
            {
              "name": "getFeedback",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Flanger#getFeedback"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the rate of the flanger modulation."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Modulation rate",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 99,
                "column": 4
              },
              "end": {
                "line": 99,
                "column": 42
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Flanger.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modulation rate"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getRate",
          "kind": "member",
          "memberof": "Flanger",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Flanger",
              "kind": "class"
            },
            {
              "name": "getRate",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Flanger#getRate"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the dry/wet amount of the node.\nUses linearFadeUpdate method to evenly fade and to allow for changes over time."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Dry/set amount",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 108,
                "column": 4
              },
              "end": {
                "line": 115,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Flanger.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Dry/set amount"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setAmount",
          "kind": "member",
          "memberof": "Flanger",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Flanger",
              "kind": "class"
            },
            {
              "name": "setAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Flanger#setAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the feedback gain of the node.\nCalls the setGain method of the feedback gain node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Feedback",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 123,
                "column": 4
              },
              "end": {
                "line": 123,
                "column": 65
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Flanger.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Feedback"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFeedback",
          "kind": "member",
          "memberof": "Flanger",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Flanger",
              "kind": "class"
            },
            {
              "name": "setFeedback",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Flanger#setFeedback"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the rate of the flanger modulation.\nCalls the setRate method of the delay time LFO."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "depth",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 125,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 131,
                "column": 4
              },
              "end": {
                "line": 131,
                "column": 56
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Flanger.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "depth"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setRate",
          "kind": "member",
          "memberof": "Flanger",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Flanger",
              "kind": "class"
            },
            {
              "name": "setRate",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Flanger#setRate"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the depth of the flanger modulation.\nCalls the setDepth method of the delay time LFO."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "depth",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 133,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 139,
                "column": 4
              },
              "end": {
                "line": 139,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Flanger.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "depth"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setDepth",
          "kind": "member",
          "memberof": "Flanger",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Flanger",
              "kind": "class"
            },
            {
              "name": "setDepth",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Flanger#setDepth"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the delay time of the node.\nCalls the setDelayTime method of the delay node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Delay time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 141,
              "column": 4
            },
            "end": {
              "line": 146,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 147,
                "column": 4
              },
              "end": {
                "line": 147,
                "column": 68
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Flanger.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Delay time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setDelayTime",
          "kind": "member",
          "memberof": "Flanger",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Flanger",
              "kind": "class"
            },
            {
              "name": "setDelayTime",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Flanger#setDelayTime"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Flanger",
        "kind": "class"
      }
    ],
    "namespace": "Flanger"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A Limiter effect used to limit the dynamic range of the incoming signal.\nBuilt using a Compressor node with more aggressive settings connected to a Gain node."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 4,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "Compression threshold in dB (default: -16)",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.threshold"
      },
      {
        "title": "param",
        "description": "Compression ratio (default: 20)",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.ratio"
      },
      {
        "title": "param",
        "description": "Compression knee value (default: 0)",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.knee"
      },
      {
        "title": "param",
        "description": "Compression attack time (default: 0.003)",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.attack"
      },
      {
        "title": "param",
        "description": "Compression release time (default: 0.01)",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.release"
      },
      {
        "title": "param",
        "description": "Output gain value (default: 0.75)",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gain"
      },
      {
        "title": "params",
        "description": "threshold - Compressor threshold\nratio - Compressor ratio\nknee - Compressor knee value\nattack - Compressor attack time\nrelease - Compressor release time\ngain - Gain value of the gain node",
        "lineNumber": 13
      },
      {
        "title": "returns",
        "description": "Limiter Node",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "Limiter"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 14,
        "column": 0
      },
      "end": {
        "line": 35,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 163,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 4,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.threshold",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Compression threshold in dB (default: -16)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.ratio",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Compression ratio (default: 20)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.knee",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Compression knee value (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.attack",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Compression attack time (default: 0.003)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.release",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Compression release time (default: 0.01)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gain",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Output gain value (default: 0.75)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Limiter Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Limiter"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "Limiter",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the current knee value."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 74,
                "column": 4
              },
              "end": {
                "line": 74,
                "column": 42
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": []
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getKnee",
          "kind": "member",
          "memberof": "Limiter",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Limiter",
              "kind": "class"
            },
            {
              "name": "getKnee",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Limiter#getKnee"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the threshold in dB."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 80,
                "column": 4
              },
              "end": {
                "line": 80,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": []
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getThreshold",
          "kind": "member",
          "memberof": "Limiter",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Limiter",
              "kind": "class"
            },
            {
              "name": "getThreshold",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Limiter#getThreshold"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the compression ratio."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 86,
                "column": 4
              },
              "end": {
                "line": 86,
                "column": 44
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": []
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getRatio",
          "kind": "member",
          "memberof": "Limiter",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Limiter",
              "kind": "class"
            },
            {
              "name": "getRatio",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Limiter#getRatio"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the attack time."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 92,
                "column": 4
              },
              "end": {
                "line": 92,
                "column": 46
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": []
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getAttack",
          "kind": "member",
          "memberof": "Limiter",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Limiter",
              "kind": "class"
            },
            {
              "name": "getAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Limiter#getAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the release time."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 98,
                "column": 4
              },
              "end": {
                "line": 98,
                "column": 48
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": []
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getRelease",
          "kind": "member",
          "memberof": "Limiter",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Limiter",
              "kind": "class"
            },
            {
              "name": "getRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Limiter#getRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the current gain reduction in dB."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 104,
                "column": 4
              },
              "end": {
                "line": 104,
                "column": 47
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": []
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getReduction",
          "kind": "member",
          "memberof": "Limiter",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Limiter",
              "kind": "class"
            },
            {
              "name": "getReduction",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Limiter#getReduction"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the gain value of the output gain."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 111,
                "column": 4
              },
              "end": {
                "line": 111,
                "column": 42
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": []
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGain",
          "kind": "member",
          "memberof": "Limiter",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Limiter",
              "kind": "class"
            },
            {
              "name": "getGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Limiter#getGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the knee value.\nCalls the setKnee method of the compressor."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "knee value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 121,
                "column": 4
              },
              "end": {
                "line": 121,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "knee value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setKnee",
          "kind": "member",
          "memberof": "Limiter",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Limiter",
              "kind": "class"
            },
            {
              "name": "setKnee",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Limiter#setKnee"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the threshold.\nCalls the setThreshold method of the compressor."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "threshold",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 123,
              "column": 4
            },
            "end": {
              "line": 128,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 129,
                "column": 4
              },
              "end": {
                "line": 129,
                "column": 70
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "threshold"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setThreshold",
          "kind": "member",
          "memberof": "Limiter",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Limiter",
              "kind": "class"
            },
            {
              "name": "setThreshold",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Limiter#setThreshold"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the compression ratio.\nCalls the setRatio method of the compressor."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "ratio",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 137,
                "column": 4
              },
              "end": {
                "line": 137,
                "column": 62
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "ratio"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setRatio",
          "kind": "member",
          "memberof": "Limiter",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Limiter",
              "kind": "class"
            },
            {
              "name": "setRatio",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Limiter#setRatio"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the attack time.\nCalls the setAttack method of the compressor."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "attack time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 139,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 145,
                "column": 4
              },
              "end": {
                "line": 145,
                "column": 64
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "attack time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setAttack",
          "kind": "member",
          "memberof": "Limiter",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Limiter",
              "kind": "class"
            },
            {
              "name": "setAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Limiter#setAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the release time.\nCalls the setRelease method of the compressor."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "release time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 153,
                "column": 4
              },
              "end": {
                "line": 153,
                "column": 66
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "release time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setRelease",
          "kind": "member",
          "memberof": "Limiter",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Limiter",
              "kind": "class"
            },
            {
              "name": "setRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Limiter#setRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain value of the output.\nCalls the setGain method of the output gain node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "gain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 156,
              "column": 4
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 162,
                "column": 4
              },
              "end": {
                "line": 162,
                "column": 57
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Limiter.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "gain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGain",
          "kind": "member",
          "memberof": "Limiter",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Limiter",
              "kind": "class"
            },
            {
              "name": "setGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Limiter#setGain"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Limiter",
        "kind": "class"
      }
    ],
    "namespace": "Limiter"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A ping pong delay effect to adds echos and other delay-based effects to the incoming signal."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "The dry/wet amount of the node (default: 0)",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.amount"
      },
      {
        "title": "param",
        "description": "The delay time of the initial delay node (default: 0.2)",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.preDelayTime"
      },
      {
        "title": "param",
        "description": "The delay time of the left delay node (default: 0.2)",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.leftDelayTime"
      },
      {
        "title": "param",
        "description": "The delay time of the right delay node (default: 0.2)",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.rightDelayTime"
      },
      {
        "title": "param",
        "description": "The gain value of the left feedback gain node (default: 0.6)",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.leftFeedback"
      },
      {
        "title": "param",
        "description": "The gain value of the right feedback gain node (default: 0.6)",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.rightFeedback"
      },
      {
        "title": "param",
        "description": "The cutoff frequency of the low-pass filter (default: 4400)",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.tone"
      },
      {
        "title": "params",
        "description": "preDelayTime - The delay time of the initial delay node\nleftDelayTime - The delay time of the left delay node\nrightDelayTime - The delay time of the right delay node\nleftFeedback - The gain value of the left feedback gain node\nrightFeedback - The gain value of the right feedback gain node\ntone - The frequency of the low-pass filter",
        "lineNumber": 13
      },
      {
        "title": "returns",
        "description": "PingPongDelay Node",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "PingPongDelay"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 17,
        "column": 0
      },
      "end": {
        "line": 38,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 39,
          "column": 0
        },
        "end": {
          "line": 195,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.amount",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The dry/wet amount of the node (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.preDelayTime",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The delay time of the initial delay node (default: 0.2)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.leftDelayTime",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The delay time of the left delay node (default: 0.2)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.rightDelayTime",
            "lineNumber": 9,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The delay time of the right delay node (default: 0.2)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.leftFeedback",
            "lineNumber": 10,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain value of the left feedback gain node (default: 0.6)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.rightFeedback",
            "lineNumber": 11,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The gain value of the right feedback gain node (default: 0.6)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.tone",
            "lineNumber": 12,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The cutoff frequency of the low-pass filter (default: 4400)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "PingPongDelay Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "PingPongDelay"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "PingPongDelay",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the dry/wet amount of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Dry/set amount",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 93,
                "column": 4
              },
              "end": {
                "line": 93,
                "column": 33
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Dry/set amount"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getAmount",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "getAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#getAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the initial delay time of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Delay time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 99,
                "column": 4
              },
              "end": {
                "line": 99,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Delay time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getPreDelayTime",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "getPreDelayTime",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#getPreDelayTime"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the left delay time of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Delay time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 105,
                "column": 4
              },
              "end": {
                "line": 105,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Delay time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getLeftDelayTime",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "getLeftDelayTime",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#getLeftDelayTime"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the right delay time of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Delay time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 111,
                "column": 4
              },
              "end": {
                "line": 111,
                "column": 62
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Delay time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getRightDelayTime",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "getRightDelayTime",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#getRightDelayTime"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the left feedback of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Feedback value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 117,
                "column": 4
              },
              "end": {
                "line": 117,
                "column": 58
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Feedback value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getLeftFeedback",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "getLeftFeedback",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#getLeftFeedback"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the right feedback of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Feedback value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 123,
                "column": 4
              },
              "end": {
                "line": 123,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Feedback value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getRightFeedback",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "getRightFeedback",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#getRightFeedback"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the tone value of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Tone frequency",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 125,
              "column": 4
            },
            "end": {
              "line": 128,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 129,
                "column": 4
              },
              "end": {
                "line": 129,
                "column": 42
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Tone frequency"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getTone",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "getTone",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#getTone"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the dry/wet amount of the node.\nUses dryWetUpdate method to allow for changes over time."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Dry/set amount",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 132,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 138,
                "column": 4
              },
              "end": {
                "line": 146,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Dry/set amount"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setAmount",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "setAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#setAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the initial delay time of the node.\nCalls the setDelayTime method of the initial delay node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "delay time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 154,
                "column": 4
              },
              "end": {
                "line": 154,
                "column": 74
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "delay time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setPreDelayTime",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "setPreDelayTime",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#setPreDelayTime"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the left delay time of the node.\nCalls the setDelayTime method of the left delay node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "delay time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 156,
              "column": 4
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 162,
                "column": 4
              },
              "end": {
                "line": 162,
                "column": 76
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "delay time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setLeftDelayTime",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "setLeftDelayTime",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#setLeftDelayTime"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the right delay time of the node.\nCalls the setDelayTime method of the right delay node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "delay time",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 170,
                "column": 4
              },
              "end": {
                "line": 170,
                "column": 78
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "delay time"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setRightDelayTime",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "setRightDelayTime",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#setRightDelayTime"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the left feedback value of the node.\nCalls the setGain method of the left feedback gain."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "feedback gain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 172,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 178,
                "column": 4
              },
              "end": {
                "line": 178,
                "column": 77
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "feedback gain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setLeftFeedback",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "setLeftFeedback",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#setLeftFeedback"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the right feedback value of the node.\nCalls the setGain method of the right feedback gain."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "feedback gain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 180,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 186,
                "column": 4
              },
              "end": {
                "line": 186,
                "column": 79
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "feedback gain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setRightFeedback",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "setRightFeedback",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#setRightFeedback"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the tone value of the node.\nCalls the setFrequency method of the tone (filter node)."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "tone frequency",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 188,
              "column": 4
            },
            "end": {
              "line": 193,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 194,
                "column": 4
              },
              "end": {
                "line": 194,
                "column": 62
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/PingPongDelay.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "tone frequency"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setTone",
          "kind": "member",
          "memberof": "PingPongDelay",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PingPongDelay",
              "kind": "class"
            },
            {
              "name": "setTone",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PingPongDelay#setTone"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "PingPongDelay",
        "kind": "class"
      }
    ],
    "namespace": "PingPongDelay"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A convolusion reverb effect to adds width and space effects to the incoming signal."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "The dry/wet amount of the node (default: 0)",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.amount"
      },
      {
        "title": "param",
        "description": "The buffer value of the convolver node (default: null)",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "AudioBuffer"
        },
        "name": "opts.buffer"
      },
      {
        "title": "param",
        "description": "The normalize value of the convolver node (default: false)",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "Boolean"
        },
        "name": "opts.normalize"
      },
      {
        "title": "returns",
        "description": "Reverb Node",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "Reverb"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 13,
        "column": 0
      },
      "end": {
        "line": 23,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 106,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Reverb.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 3,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.amount",
            "lineNumber": 6,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The dry/wet amount of the node (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.buffer",
            "lineNumber": 7,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The buffer value of the convolver node (default: null)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "AudioBuffer"
            }
          },
          {
            "title": "param",
            "name": "opts.normalize",
            "lineNumber": 8,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The normalize value of the convolver node (default: false)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Boolean"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Reverb Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Reverb"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "Reverb",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the dry/wet amount of the node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Dry/set amount",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 58,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 62,
                "column": 4
              },
              "end": {
                "line": 62,
                "column": 33
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Reverb.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Dry/set amount"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getAmount",
          "kind": "member",
          "memberof": "Reverb",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Reverb",
              "kind": "class"
            },
            {
              "name": "getAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Reverb#getAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the current audio buffer of the convolver node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Audio buffer",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "AudioBuffer"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 64,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 68,
                "column": 4
              },
              "end": {
                "line": 68,
                "column": 55
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Reverb.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Audio buffer"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "AudioBuffer"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getBuffer",
          "kind": "member",
          "memberof": "Reverb",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Reverb",
              "kind": "class"
            },
            {
              "name": "getBuffer",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Reverb#getBuffer"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the current normalize value of the convolver node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Normalize value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 74,
                "column": 4
              },
              "end": {
                "line": 74,
                "column": 61
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Reverb.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Normalize value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getNormalize",
          "kind": "member",
          "memberof": "Reverb",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Reverb",
              "kind": "class"
            },
            {
              "name": "getNormalize",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Reverb#getNormalize"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the dry/wet amount of the node.\nUses dryWetUpdate method to allow for changes over time."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Dry/set amount",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 83,
                "column": 4
              },
              "end": {
                "line": 91,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Reverb.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Dry/set amount"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setAmount",
          "kind": "member",
          "memberof": "Reverb",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Reverb",
              "kind": "class"
            },
            {
              "name": "setAmount",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Reverb#setAmount"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the audio buffer of the convolver node.\nCalls the setBuffer method on the convolver node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Audio buffer",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "AudioBuffer"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 98,
                "column": 4
              },
              "end": {
                "line": 98,
                "column": 54
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Reverb.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Audio buffer"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "AudioBuffer"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setBuffer",
          "kind": "member",
          "memberof": "Reverb",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Reverb",
              "kind": "class"
            },
            {
              "name": "setBuffer",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Reverb#setBuffer"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the normalize value of the convolver node.\nCalls the setNormalize method on the convolver node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "Normalize value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Boolean"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 105,
                "column": 4
              },
              "end": {
                "line": 105,
                "column": 60
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/effects/Reverb.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Normalize value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Boolean"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setNormalize",
          "kind": "member",
          "memberof": "Reverb",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Reverb",
              "kind": "class"
            },
            {
              "name": "setNormalize",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Reverb#setNormalize"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Reverb",
        "kind": "class"
      }
    ],
    "namespace": "Reverb"
  }
]