[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A general-purpose ADSR envelope that can be connected to AudioParams to modulate values over time.\nBuilt using a ConstantSource node."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "// |  A  | D |  S  | R |\n//      / \\\n//     /   \\\n//    /     \\ _____\n//   /              \\\n//  /                \\\n\nconst env = new Dot.Envelope(AC, { decay: 0.4, sustain: 0 })\nconst gain = new Dot.Gain(AC)\n\nenv.connect(gain.getParams().gain)",
        "lineNumber": 4
      },
      {
        "title": "extends",
        "description": null,
        "lineNumber": 17,
        "type": null,
        "name": "DotAudioNode"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "Amount of time for the envelope to reach the modifier value from 0 (default: 0)",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.attack"
      },
      {
        "title": "param",
        "description": "Amount of time for the envelope to reach the sustain value after the attack time (default: 0)",
        "lineNumber": 21,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.decay"
      },
      {
        "title": "param",
        "description": "The sustain value of the envelope after teh attack and decay times (default: 1)",
        "lineNumber": 22,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.sustain"
      },
      {
        "title": "param",
        "description": "Amount of time for the envelope to reach 0 after release (default: 0)",
        "lineNumber": 23,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.release"
      },
      {
        "title": "param",
        "description": "The modulation value of the envelope (default: 1)",
        "lineNumber": 24,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.modifier"
      },
      {
        "title": "returns",
        "description": "Envelope Node",
        "lineNumber": 25,
        "type": {
          "type": "NameExpression",
          "name": "Envelope"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 12,
        "column": 0
      },
      "end": {
        "line": 38,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 39,
          "column": 0
        },
        "end": {
          "line": 187,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 17,
        "type": null,
        "name": "DotAudioNode"
      }
    ],
    "examples": [
      {
        "description": "// |  A  | D |  S  | R |\n//      / \\\n//     /   \\\n//    /     \\ _____\n//   /              \\\n//  /                \\\n\nconst env = new Dot.Envelope(AC, { decay: 0.4, sustain: 0 })\nconst gain = new Dot.Gain(AC)\n\nenv.connect(gain.getParams().gain)"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.attack",
            "lineNumber": 20,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Amount of time for the envelope to reach the modifier value from 0 (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.decay",
            "lineNumber": 21,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Amount of time for the envelope to reach the sustain value after the attack time (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.sustain",
            "lineNumber": 22,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The sustain value of the envelope after teh attack and decay times (default: 1)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.release",
            "lineNumber": 23,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Amount of time for the envelope to reach 0 after release (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.modifier",
            "lineNumber": 24,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The modulation value of the envelope (default: 1)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Envelope Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Envelope"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "Envelope",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the attack time of the envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Attack time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 76,
                "column": 4
              },
              "end": {
                "line": 76,
                "column": 33
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Attack time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getAttack",
          "kind": "member",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "getAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#getAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the decay time of the envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Decay time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 82,
                "column": 4
              },
              "end": {
                "line": 82,
                "column": 31
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Decay time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getDecay",
          "kind": "member",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "getDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#getDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the sustain value of the envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Sustain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 88,
                "column": 4
              },
              "end": {
                "line": 88,
                "column": 35
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Sustain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getSustain",
          "kind": "member",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "getSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#getSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the release time of the envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Release time",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 94,
                "column": 4
              },
              "end": {
                "line": 94,
                "column": 35
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Release time"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getRelease",
          "kind": "member",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "getRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#getRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the modifier value of the envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Modifier value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 100,
                "column": 4
              },
              "end": {
                "line": 100,
                "column": 37
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Modifier value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getModifier",
          "kind": "member",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "getModifier",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#getModifier"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the attack time of the envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "attack time value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 107,
                "column": 4
              },
              "end": {
                "line": 107,
                "column": 42
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "attack time value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setAttack",
          "kind": "member",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "setAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#setAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the decay time of the envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "decay time value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 113,
                "column": 4
              },
              "end": {
                "line": 113,
                "column": 40
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "decay time value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setDecay",
          "kind": "member",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "setDecay",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#setDecay"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the sustain value of the envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "sustain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 119,
                "column": 4
              },
              "end": {
                "line": 119,
                "column": 44
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "sustain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setSustain",
          "kind": "member",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "setSustain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#setSustain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the release time of the envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "release time value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 125,
                "column": 4
              },
              "end": {
                "line": 125,
                "column": 44
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "release time value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setRelease",
          "kind": "member",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "setRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#setRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the modifier value of the envelope."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "modifier value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 131,
                "column": 4
              },
              "end": {
                "line": 131,
                "column": 46
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "modifier value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setModifier",
          "kind": "member",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "setModifier",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#setModifier"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Triggers the attack of the envelope.\nWill automatically trigger the decay after the attack time."
                  }
                ]
              }
            ]
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 144,
              "column": 4
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 148,
                "column": 4
              },
              "end": {
                "line": 167,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "triggerAttack",
          "kind": "member",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "triggerAttack",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#triggerAttack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Triggers the release of the envelope."
                  }
                ]
              }
            ]
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 172,
                "column": 4
              },
              "end": {
                "line": 175,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "triggerRelease",
          "kind": "member",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "triggerRelease",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#triggerRelease"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Triggers an instant stop of the envelope."
                  }
                ]
              }
            ]
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 177,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 180,
                "column": 4
              },
              "end": {
                "line": 183,
                "column": 5
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/Envelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "triggerStop",
          "kind": "member",
          "memberof": "Envelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Envelope",
              "kind": "class"
            },
            {
              "name": "triggerStop",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Envelope#triggerStop"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Envelope",
        "kind": "class"
      }
    ],
    "namespace": "Envelope"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "An envelope connected to a filter node.\nCan be used to modulate the sound and tone of the incoming signal over time."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "const filterEnv = new Dot.FilterEnv(AC, { frequency, 0, decay: 0.4, sustain: 0, modifier: 1000 })\nconst osc = new Dot.Osc(AC, { waveform: 'sawtooth' })\n\nDot.chain(osc, filterEnv, AC.destination)\n\nfilterEnv.triggerAttack()",
        "lineNumber": 4
      },
      {
        "title": "extends",
        "description": null,
        "lineNumber": 12,
        "type": null,
        "name": "Envelope"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "Frequency of the filter in Hz (default: 2000)",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.frequency"
      },
      {
        "title": "param",
        "description": "Q factor of the filter (default: 0)",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.q"
      },
      {
        "title": "param",
        "description": "Detune value of the filter (default: 0)",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.detune"
      },
      {
        "title": "param",
        "description": "Gain value of the filter (default: 0)",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gain"
      },
      {
        "title": "param",
        "description": "Fitler type of the filter (default: 'lowpass')",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.type"
      },
      {
        "title": "params",
        "description": "frequency - Frequency of the filter node\nq - Q factor of the filter node\ndetune - Detune of the filter node\ngain - Gain of the filter node",
        "lineNumber": 20
      },
      {
        "title": "returns",
        "description": "FilterEnvelope Node",
        "lineNumber": 25,
        "type": {
          "type": "NameExpression",
          "name": "FilterEnvelope"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 12,
        "column": 0
      },
      "end": {
        "line": 38,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 39,
          "column": 0
        },
        "end": {
          "line": 138,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/FilterEnvelope.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 12,
        "type": null,
        "name": "Envelope"
      }
    ],
    "examples": [
      {
        "description": "const filterEnv = new Dot.FilterEnv(AC, { frequency, 0, decay: 0.4, sustain: 0, modifier: 1000 })\nconst osc = new Dot.Osc(AC, { waveform: 'sawtooth' })\n\nDot.chain(osc, filterEnv, AC.destination)\n\nfilterEnv.triggerAttack()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.frequency",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Frequency of the filter in Hz (default: 2000)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.q",
            "lineNumber": 16,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Q factor of the filter (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.detune",
            "lineNumber": 17,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Detune value of the filter (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.gain",
            "lineNumber": 18,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Gain value of the filter (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          },
          {
            "title": "param",
            "name": "opts.type",
            "lineNumber": 19,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Fitler type of the filter (default: 'lowpass')"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "FilterEnvelope Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "FilterEnvelope"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "FilterEnvelope",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the cutoff frequency of the filter node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Frequency value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 74,
                "column": 4
              },
              "end": {
                "line": 74,
                "column": 52
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/FilterEnvelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Frequency value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFrequency",
          "kind": "member",
          "memberof": "FilterEnvelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FilterEnvelope",
              "kind": "class"
            },
            {
              "name": "getFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FilterEnvelope#getFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the q factor of the filter node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Q factor value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 80,
                "column": 4
              },
              "end": {
                "line": 80,
                "column": 36
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/FilterEnvelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Q factor value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getQ",
          "kind": "member",
          "memberof": "FilterEnvelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FilterEnvelope",
              "kind": "class"
            },
            {
              "name": "getQ",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FilterEnvelope#getQ"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the detune value of the filter node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Detune value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 86,
                "column": 4
              },
              "end": {
                "line": 86,
                "column": 46
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/FilterEnvelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detune value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getDetune",
          "kind": "member",
          "memberof": "FilterEnvelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FilterEnvelope",
              "kind": "class"
            },
            {
              "name": "getDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FilterEnvelope#getDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the gain value of the filter node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Gain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 92,
                "column": 4
              },
              "end": {
                "line": 92,
                "column": 42
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/FilterEnvelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGain",
          "kind": "member",
          "memberof": "FilterEnvelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FilterEnvelope",
              "kind": "class"
            },
            {
              "name": "getGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FilterEnvelope#getGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the filter node's type."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Filter tpye",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 98,
                "column": 4
              },
              "end": {
                "line": 98,
                "column": 41
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/FilterEnvelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter tpye"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getType",
          "kind": "member",
          "memberof": "FilterEnvelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FilterEnvelope",
              "kind": "class"
            },
            {
              "name": "getType",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FilterEnvelope#getType"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the cutoff frequency of the filter node.\nCalls the setFrequency method on the filter."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "frequency value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 107,
                "column": 4
              },
              "end": {
                "line": 107,
                "column": 69
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/FilterEnvelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "frequency value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFrequency",
          "kind": "member",
          "memberof": "FilterEnvelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FilterEnvelope",
              "kind": "class"
            },
            {
              "name": "setFrequency",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FilterEnvelope#setFrequency"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the q factor value of the filter node.\nCalls the setQ method on the filter."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "q factor value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 115,
                "column": 4
              },
              "end": {
                "line": 115,
                "column": 53
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/FilterEnvelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "q factor value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setQ",
          "kind": "member",
          "memberof": "FilterEnvelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FilterEnvelope",
              "kind": "class"
            },
            {
              "name": "setQ",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FilterEnvelope#setQ"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the detune value of the filter node.\nCalls the setDetune method on the filter."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "detune value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 123,
                "column": 4
              },
              "end": {
                "line": 123,
                "column": 63
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/FilterEnvelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "detune value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setDetune",
          "kind": "member",
          "memberof": "FilterEnvelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FilterEnvelope",
              "kind": "class"
            },
            {
              "name": "setDetune",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FilterEnvelope#setDetune"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the gain value of the filter node.\nCalls the setGain method on the filter."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "gain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 125,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 131,
                "column": 4
              },
              "end": {
                "line": 131,
                "column": 59
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/FilterEnvelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "gain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGain",
          "kind": "member",
          "memberof": "FilterEnvelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FilterEnvelope",
              "kind": "class"
            },
            {
              "name": "setGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FilterEnvelope#setGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the filter node's type."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "filter type",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "String"
              },
              "name": "val"
            }
          ],
          "loc": {
            "start": {
              "line": 133,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 137,
                "column": 4
              },
              "end": {
                "line": 137,
                "column": 47
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/FilterEnvelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "filter type"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "String"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setType",
          "kind": "member",
          "memberof": "FilterEnvelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FilterEnvelope",
              "kind": "class"
            },
            {
              "name": "setType",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "FilterEnvelope#setType"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "FilterEnvelope",
        "kind": "class"
      }
    ],
    "namespace": "FilterEnvelope"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "An envelope connected to a gain node.\nCan be used to modulate the gain of the incoming signal over time."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "example",
        "description": "const gainEnv = new Dot.GainEnvelope(AC, { decay: 0.4, sustain: 0 })\nconst osc = new Dot.Osc(AC)\n\nDot.chain(osc, gainEnv, AC.destination)\n\ngainEnv.triggerAttack()",
        "lineNumber": 4
      },
      {
        "title": "extends",
        "description": null,
        "lineNumber": 12,
        "type": null,
        "name": "Envelope"
      },
      {
        "title": "param",
        "description": "Audio context",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        },
        "name": "AC"
      },
      {
        "title": "param",
        "description": "Initialization options",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "opts"
      },
      {
        "title": "param",
        "description": "The base gain of the gain node (default: 0)",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Number"
        },
        "name": "opts.gain"
      },
      {
        "title": "params",
        "description": "gain - Gain of the gain node",
        "lineNumber": 16
      },
      {
        "title": "returns",
        "description": "GainEnvelope Node",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "GainEnvelope"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 8,
        "column": 0
      },
      "end": {
        "line": 27,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 28,
          "column": 0
        },
        "end": {
          "line": 66,
          "column": 1
        }
      },
      "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/GainEnvelope.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 12,
        "type": null,
        "name": "Envelope"
      }
    ],
    "examples": [
      {
        "description": "const gainEnv = new Dot.GainEnvelope(AC, { decay: 0.4, sustain: 0 })\nconst osc = new Dot.Osc(AC)\n\nDot.chain(osc, gainEnv, AC.destination)\n\ngainEnv.triggerAttack()"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "AC",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Audio context"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "AudioContext"
        }
      },
      {
        "title": "param",
        "name": "opts",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Initialization options"
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "title": "param",
            "name": "opts.gain",
            "lineNumber": 15,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The base gain of the gain node (default: 0)"
                    }
                  ]
                }
              ]
            },
            "type": {
              "type": "NameExpression",
              "name": "Number"
            }
          }
        ],
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "GainEnvelope Node"
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "GainEnvelope"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "GainEnvelope",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the base gain value on the gain node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "returns",
              "description": "Gain value",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 52,
              "column": 4
            },
            "end": {
              "line": 55,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 56,
                "column": 4
              },
              "end": {
                "line": 56,
                "column": 42
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/GainEnvelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Gain value"
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getGain",
          "kind": "member",
          "memberof": "GainEnvelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "GainEnvelope",
              "kind": "class"
            },
            {
              "name": "getGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "GainEnvelope#getGain"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the base gain value of the gain node.\nCalls the setGain method on the gain node."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "param",
              "description": "gain value",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Number"
              },
              "name": "val"
            },
            {
              "title": "param",
              "description": "update time in seconds (optional)",
              "lineNumber": 4,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "time"
            }
          ],
          "loc": {
            "start": {
              "line": 59,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 65,
                "column": 4
              },
              "end": {
                "line": 65,
                "column": 57
              }
            },
            "file": "/Users/kjshanks/Documents/code_stuff/dot/src/nodes/components/GainEnvelope.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "val",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "gain value"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Number"
              }
            },
            {
              "title": "param",
              "name": "time",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "update time in seconds (optional)"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setGain",
          "kind": "member",
          "memberof": "GainEnvelope",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "GainEnvelope",
              "kind": "class"
            },
            {
              "name": "setGain",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "GainEnvelope#setGain"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "GainEnvelope",
        "kind": "class"
      }
    ],
    "namespace": "GainEnvelope"
  }
]